{"file_contents":{"client/src/components/cyber-card.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { ReactNode } from \"react\";\n\ninterface CyberCardProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport default function CyberCard({ children, className = \"\", ...props }: CyberCardProps) {\n  return (\n    <motion.div\n      className={`cyber-border rounded-xl p-8 card-hover holographic ${className}`}\n      whileHover={{\n        y: -8,\n        boxShadow: \"0 20px 40px rgba(147, 51, 234, 0.3)\",\n      }}\n      transition={{ type: \"spring\", stiffness: 300 }}\n      {...props}\n    >\n      {children}\n    </motion.div>\n  );\n}\n","size_bytes":575},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"replit.md":{"content":"# CTF Cognito - Capture The Flag Challenge\n\n## Overview\nCTF Cognito is a cybersecurity challenge platform for the All Kerala Tech Fest. The application features a modern, animated frontend with a full-stack Express + React architecture.\n\n**Current State**: Fully functional and ready for development/deployment in Replit environment.\n\n## Project Architecture\n\n### Tech Stack\n- **Frontend**: React 18 + Vite + TypeScript\n- **Backend**: Express.js + TypeScript\n- **Styling**: Tailwind CSS 3.4 + Radix UI Components\n- **Database**: Drizzle ORM with PostgreSQL support (currently using in-memory storage)\n- **Build Tool**: Vite 5.4 for frontend, esbuild for backend\n- **Dev Server**: Single server on port 5000 serving both frontend and backend\n\n### Project Structure\n```\n.\n├── client/               # Frontend React application\n│   ├── src/\n│   │   ├── components/  # UI components (Radix UI, custom animations)\n│   │   ├── pages/       # Page components\n│   │   ├── lib/         # Utilities and query client\n│   │   └── hooks/       # React hooks\n│   └── index.html       # Entry HTML file\n├── server/              # Backend Express application\n│   ├── index.ts         # Main server entry point\n│   ├── routes.ts        # API route definitions\n│   ├── storage.ts       # Storage interface (in-memory implementation)\n│   └── vite.ts          # Vite dev server setup\n├── shared/              # Shared types and schemas\n│   └── schema.ts        # Drizzle ORM schema and Zod validation\n└── attached_assets/     # Static assets and images\n```\n\n### Key Features\n- Modern cybersecurity-themed UI with animations\n- Floating particles and glitch text effects\n- Countdown timer component\n- Responsive navigation\n- Full TypeScript coverage\n- Hot Module Replacement (HMR) in development\n\n## Development Setup\n\n### Running the Application\nThe application runs on a single port (5000) serving both frontend and backend:\n```bash\nnpm run dev\n```\n\n### Building for Production\n```bash\nnpm run build  # Builds both frontend and backend\nnpm start      # Runs production build\n```\n\n### Database Management\nThe project is configured for PostgreSQL with Drizzle ORM but currently uses in-memory storage. To push schema changes:\n```bash\nnpm run db:push\n```\n\n## Configuration\n\n### Vite Configuration\n- Configured for Replit proxy support with `allowedHosts: true`\n- HMR configured with clientPort 443 for Replit environment\n- Serves on 0.0.0.0:5173 internally, proxied through Express\n\n### Server Configuration\n- Main server runs on port 5000 (required for Replit)\n- Development mode uses Vite middleware for HMR\n- Production mode serves static files from dist/public\n\n## Deployment\n\n### Replit Deployment (Autoscale)\n- **Build Command**: `npm run build`\n- **Run Command**: `npm start`\n- **Deployment Type**: Autoscale (stateless web application)\n\nThe application is configured to run in production mode with:\n- Bundled backend with esbuild\n- Optimized frontend build with Vite\n- Static file serving from dist/public\n\n## Recent Changes (October 10, 2025)\n- Initial GitHub import to Replit\n- Installed all npm dependencies\n- Configured Vite for Replit proxy support (HMR, host settings)\n- Added missing nanoid dependency\n- Configured development workflow on port 5000\n- Set up deployment configuration for autoscale\n- Verified application functionality with cybersecurity challenge UI\n\n## Database Schema\nCurrently defines a basic user schema:\n- `users` table with id, username, password fields\n- UUID primary key generation\n- Zod validation schemas for type safety\n\n## Notes\n- The application uses in-memory storage for development\n- To use PostgreSQL, ensure DATABASE_URL environment variable is set\n- All API routes should be prefixed with `/api`\n- Frontend assets are aliased: `@/` for client/src, `@shared/` for shared types\n","size_bytes":3923},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/animated-background.tsx":{"content":"import { motion } from \"framer-motion\";\n\nexport default function AnimatedBackground() {\n  return (\n    <div className=\"matrix-bg\">\n      <div className=\"matrix-rain circuit-pattern\">\n        {/* Animated circuit lines */}\n        <svg className=\"absolute inset-0 w-full h-full opacity-20\" xmlns=\"http://www.w3.org/2000/svg\">\n          <defs>\n            <pattern id=\"circuit\" x=\"0\" y=\"0\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\n              <path \n                d=\"M0 20h40M20 0v40\" \n                stroke=\"url(#circuitGradient)\" \n                strokeWidth=\"0.5\" \n                fill=\"none\"\n              />\n              <circle cx=\"20\" cy=\"20\" r=\"2\" fill=\"url(#circuitGradient)\" />\n            </pattern>\n            <linearGradient id=\"circuitGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"hsl(292, 76%, 58%)\" />\n              <stop offset=\"50%\" stopColor=\"hsl(187, 85%, 53%)\" />\n              <stop offset=\"100%\" stopColor=\"hsl(217, 91%, 60%)\" />\n            </linearGradient>\n          </defs>\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#circuit)\" />\n        </svg>\n\n        {/* Matrix rain effect */}\n        {Array.from({ length: 20 }).map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute w-0.5 bg-gradient-to-b from-transparent via-secondary to-transparent opacity-30\"\n            style={{\n              left: `${Math.random() * 100}%`,\n              height: `${Math.random() * 200 + 100}px`,\n            }}\n            animate={{\n              y: ['-100vh', '100vh'],\n            }}\n            transition={{\n              duration: Math.random() * 10 + 10,\n              repeat: Infinity,\n              ease: 'linear',\n              delay: Math.random() * 10,\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","size_bytes":1852},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        orbitron: [\"var(--font-orbitron)\"],\n        code: [\"var(--font-code)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        matrix: {\n          \"0%\": { transform: \"translateY(-100%)\" },\n          \"100%\": { transform: \"translateY(100vh)\" },\n        },\n        glitch: {\n          \"0%, 100%\": { \n            transform: \"translate(0)\",\n            filter: \"hue-rotate(0deg)\",\n          },\n          \"10%\": { transform: \"translate(-2px, 2px)\" },\n          \"20%\": { transform: \"translate(-4px, -2px)\" },\n          \"30%\": { transform: \"translate(4px, 2px)\" },\n          \"40%\": { transform: \"translate(-2px, -2px)\" },\n          \"50%\": { \n            transform: \"translate(2px, 2px)\", \n            filter: \"hue-rotate(90deg)\",\n          },\n          \"60%\": { transform: \"translate(-4px, 2px)\" },\n          \"70%\": { transform: \"translate(4px, -2px)\" },\n          \"80%\": { transform: \"translate(-2px, 2px)\" },\n          \"90%\": { \n            transform: \"translate(2px, -2px)\", \n            filter: \"hue-rotate(180deg)\",\n          },\n        },\n        float: {\n          \"0%, 100%\": { \n            transform: \"translateY(0px) rotate(0deg)\",\n          },\n          \"50%\": { \n            transform: \"translateY(-20px) rotate(180deg)\",\n          },\n        },\n        \"pulse-glow\": {\n          \"0%\": { \n            boxShadow: \"0 0 20px rgba(147, 51, 234, 0.5)\",\n          },\n          \"100%\": { \n            boxShadow: \"0 0 40px rgba(147, 51, 234, 0.8), 0 0 60px rgba(6, 182, 212, 0.3)\",\n          },\n        },\n        circuit: {\n          \"0%, 100%\": { opacity: \"0.3\" },\n          \"50%\": { opacity: \"1\" },\n        },\n        holographic: {\n          \"0%, 100%\": { backgroundPosition: \"0% 50%\" },\n          \"50%\": { backgroundPosition: \"100% 50%\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        matrix: \"matrix 20s linear infinite\",\n        glitch: \"glitch 2s ease-in-out infinite alternate\",\n        float: \"float 6s ease-in-out infinite\",\n        \"pulse-glow\": \"pulse-glow 2s ease-in-out infinite alternate\",\n        circuit: \"circuit 8s linear infinite\",\n        holographic: \"holographic 4s ease infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4792},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"client/src/components/image-preloader.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\n\n// Import all images that need preloading\nimport ctfCognitoLogo from \"@assets/Adobe Express - file_1759044466581.png\";\nimport offensoLogo from \"@assets/Offenso-Logo-White.png_1759068476216.webp\";\nimport cognitoTechfestLogo from \"@assets/Untitled design_1759044466581.png\";\n\ninterface ImagePreloaderProps {\n  onComplete: () => void;\n  children: React.ReactNode;\n}\n\nconst images = [\n  ctfCognitoLogo,\n  offensoLogo,\n  cognitoTechfestLogo\n];\n\nexport default function ImagePreloader({ onComplete, children }: ImagePreloaderProps) {\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadingProgress, setLoadingProgress] = useState(0);\n\n  useEffect(() => {\n    const preloadImages = async () => {\n      const imagePromises = images.map((src, index) => {\n        return new Promise((resolve, reject) => {\n          const img = new Image();\n          img.onload = () => {\n            setLoadedImages(prev => {\n              const newCount = prev + 1;\n              setLoadingProgress((newCount / images.length) * 100);\n              return newCount;\n            });\n            resolve(src);\n          };\n          img.onerror = reject;\n          img.src = src;\n        });\n      });\n\n      try {\n        await Promise.all(imagePromises);\n        // Add a small delay to ensure smooth transition\n        setTimeout(() => {\n          setIsLoading(false);\n          onComplete();\n        }, 300);\n      } catch (error) {\n        console.error(\"Error preloading images:\", error);\n        // Still proceed if some images fail\n        setIsLoading(false);\n        onComplete();\n      }\n    };\n\n    preloadImages();\n  }, [onComplete]);\n\n  if (isLoading) {\n    return (\n      <div className=\"fixed inset-0 bg-background flex items-center justify-center z-50\">\n        <motion.div \n          className=\"text-center\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n        >\n          {/* CTF Logo during loading */}\n          <motion.div \n            className=\"mb-8\"\n            animate={{ \n              scale: [1, 1.05, 1],\n              rotateY: [0, 5, 0]\n            }}\n            transition={{ \n              duration: 2,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }}\n          >\n            <div className=\"w-32 h-32 mx-auto bg-gradient-to-br from-primary/20 to-secondary/20 rounded-full flex items-center justify-center neon-border\">\n              <div className=\"text-4xl font-orbitron font-bold text-gradient\">CTF</div>\n            </div>\n          </motion.div>\n\n          {/* Loading text */}\n          <motion.h2 \n            className=\"text-2xl font-orbitron font-bold mb-6 text-gradient\"\n            animate={{ opacity: [0.5, 1, 0.5] }}\n            transition={{ duration: 1.5, repeat: Infinity }}\n          >\n            Loading CTF Cognito\n          </motion.h2>\n\n          {/* Progress bar */}\n          <div className=\"w-64 mx-auto\">\n            <div className=\"relative h-2 bg-muted rounded-full overflow-hidden\">\n              <motion.div \n                className=\"absolute top-0 left-0 h-full bg-gradient-to-r from-primary to-secondary rounded-full\"\n                initial={{ width: 0 }}\n                animate={{ width: `${loadingProgress}%` }}\n                transition={{ duration: 0.3, ease: \"easeOut\" }}\n              />\n              {/* Glowing effect */}\n              <motion.div \n                className=\"absolute top-0 left-0 h-full w-full bg-gradient-to-r from-transparent via-white/20 to-transparent\"\n                animate={{ x: [-100, 300] }}\n                transition={{ \n                  duration: 1.5,\n                  repeat: Infinity,\n                  ease: \"easeInOut\"\n                }}\n              />\n            </div>\n            <div className=\"flex justify-between mt-2 text-sm text-muted-foreground\">\n              <span>Loading assets...</span>\n              <span>{Math.round(loadingProgress)}%</span>\n            </div>\n          </div>\n\n          {/* Loading status */}\n          <motion.p \n            className=\"mt-4 text-sm text-muted-foreground\"\n            animate={{ opacity: [0.7, 1, 0.7] }}\n            transition={{ duration: 1, repeat: Infinity }}\n          >\n            {loadedImages < images.length ? `Loading ${loadedImages + 1} of ${images.length} assets` : \"Finalizing...\"}\n          </motion.p>\n\n          {/* Cyber effect particles */}\n          <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n            {[...Array(20)].map((_, i) => (\n              <motion.div\n                key={i}\n                className=\"absolute w-1 h-1 bg-primary rounded-full\"\n                style={{\n                  left: `${Math.random() * 100}%`,\n                  top: `${Math.random() * 100}%`,\n                }}\n                animate={{\n                  opacity: [0, 1, 0],\n                  scale: [0, 1, 0],\n                }}\n                transition={{\n                  duration: 2,\n                  repeat: Infinity,\n                  delay: i * 0.1,\n                }}\n              />\n            ))}\n          </div>\n        </motion.div>\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n}\n","size_bytes":5330},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\"; \nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    host: \"0.0.0.0\",\n    port: 5173,\n    strictPort: false,\n    hmr: {\n      clientPort: 443,\n    },\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1182},"client/src/components/glitch-text.tsx":{"content":"import { motion } from \"framer-motion\";\n\ninterface GlitchTextProps {\n  text: string;\n  className?: string;\n}\n\nexport default function GlitchText({ text, className = \"\", ...props }: GlitchTextProps) {\n  return (\n    <motion.div\n      className={`relative ${className}`}\n      {...props}\n    >\n      <motion.span\n        className=\"relative z-10\"\n        animate={{\n          textShadow: [\n            \"0 0 0 transparent\",\n            \"2px 0 0 #06b6d4, -2px 0 0 #d946ef\",\n            \"0 0 0 transparent\",\n          ],\n        }}\n        transition={{\n          duration: 2,\n          repeat: Infinity,\n          ease: \"easeInOut\",\n        }}\n      >\n        {text}\n      </motion.span>\n      \n      <motion.span\n        className=\"absolute top-0 left-0 z-0 text-secondary\"\n        animate={{\n          x: [0, 2, -2, 0],\n          opacity: [0, 0.7, 0],\n        }}\n        transition={{\n          duration: 2,\n          repeat: Infinity,\n          ease: \"easeInOut\",\n          delay: 0.1,\n        }}\n      >\n        {text}\n      </motion.span>\n      \n      <motion.span\n        className=\"absolute top-0 left-0 z-0 text-primary\"\n        animate={{\n          x: [0, -2, 2, 0],\n          opacity: [0, 0.7, 0],\n        }}\n        transition={{\n          duration: 2,\n          repeat: Infinity,\n          ease: \"easeInOut\",\n          delay: 0.2,\n        }}\n      >\n        {text}\n      </motion.span>\n    </motion.div>\n  );\n}\n","size_bytes":1419},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/countdown-timer.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface CountdownTimerProps {\n  targetDate: string;\n}\n\nexport default function CountdownTimer({ targetDate }: CountdownTimerProps) {\n  const [timeLeft, setTimeLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  useEffect(() => {\n    const updateCountdown = () => {\n      const now = new Date().getTime();\n      const target = new Date(targetDate).getTime();\n      const difference = target - now;\n\n      if (difference > 0) {\n        setTimeLeft({\n          days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n          hours: Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n          minutes: Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60)),\n          seconds: Math.floor((difference % (1000 * 60)) / 1000),\n        });\n      }\n    };\n\n    updateCountdown();\n    const interval = setInterval(updateCountdown, 1000);\n\n    return () => clearInterval(interval);\n  }, [targetDate]);\n\n  const formatNumber = (num: number) => num.toString().padStart(2, '0');\n\n  return (\n    <div className=\"grid grid-cols-2 sm:flex sm:justify-center gap-2 sm:gap-4 md:gap-8 max-w-xs sm:max-w-none mx-auto\" data-testid=\"countdown-timer\">\n      {Object.entries(timeLeft).map(([unit, value]) => (\n        <motion.div\n          key={unit}\n          className=\"countdown-digit rounded-lg p-2 sm:p-3 md:p-4 text-center min-w-[60px] sm:min-w-[70px] md:min-w-[80px]\"\n          whileHover={{ scale: 1.05 }}\n          transition={{ type: \"spring\", stiffness: 300 }}\n          data-testid={`countdown-${unit}`}\n        >\n          <motion.div\n            className=\"text-xl sm:text-2xl md:text-3xl lg:text-4xl font-bold font-code text-foreground\"\n            key={value}\n            initial={{ y: -20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ type: \"spring\", stiffness: 300 }}\n          >\n            {formatNumber(value)}\n          </motion.div>\n          <div className=\"text-xs sm:text-sm text-muted-foreground uppercase tracking-wide\">\n            {unit}\n          </div>\n        </motion.div>\n      ))}\n    </div>\n  );\n}\n","size_bytes":2192},"client/src/components/modern-text.tsx":{"content":"import { motion } from \"framer-motion\";\n\ninterface ModernTextProps {\n  text: string;\n  className?: string;\n}\n\nexport default function ModernText({ text, className = \"\", ...props }: ModernTextProps) {\n  return (\n    <motion.div\n      className={`relative ${className}`}\n      {...props}\n    >\n      <motion.h1\n        className=\"relative z-10 font-orbitron font-black bg-gradient-to-r from-white via-cyan-200 to-blue-400 bg-clip-text text-transparent\"\n        initial={{ opacity: 0, y: 30, scale: 0.9 }}\n        animate={{ \n          opacity: 1, \n          y: 0,\n          scale: 1,\n        }}\n        whileInView={{\n          textShadow: [\n            \"0 0 0px rgba(6, 182, 212, 0)\",\n            \"0 0 20px rgba(6, 182, 212, 0.4)\",\n            \"0 0 40px rgba(6, 182, 212, 0.6)\",\n            \"0 0 20px rgba(6, 182, 212, 0.4)\",\n            \"0 0 0px rgba(6, 182, 212, 0)\",\n          ],\n        }}\n        transition={{\n          opacity: { duration: 1.2, ease: \"easeOut\" },\n          y: { duration: 1.2, ease: \"easeOut\" },\n          scale: { duration: 1.2, ease: \"easeOut\" },\n          textShadow: {\n            duration: 4,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 1,\n          }\n        }}\n      >\n        {text}\n      </motion.h1>\n      \n      {/* Modern accent lines */}\n      <motion.div\n        className=\"absolute -bottom-4 left-1/2 transform -translate-x-1/2\"\n        initial={{ opacity: 0, scaleX: 0 }}\n        animate={{ opacity: 1, scaleX: 1 }}\n        transition={{ duration: 1.5, delay: 1.2 }}\n      >\n        <motion.div\n          className=\"h-0.5 w-32 bg-gradient-to-r from-transparent via-cyan-400 to-transparent\"\n          animate={{ \n            opacity: [0.3, 1, 0.3],\n            scaleX: [1, 1.2, 1],\n          }}\n          transition={{\n            duration: 3,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n          }}\n        />\n      </motion.div>\n    </motion.div>\n  );\n}","size_bytes":1947},"client/src/App.tsx":{"content":"import { useState } from \"react\";\nimport { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"next-themes\";\nimport ImagePreloader from \"@/components/image-preloader\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider attribute=\"class\" defaultTheme=\"dark\" enableSystem>\n        <TooltipProvider>\n          <ImagePreloader onComplete={() => setImagesLoaded(true)}>\n            <Toaster />\n            <Router />\n          </ImagePreloader>\n        </TooltipProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1101},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/floating-particles.tsx":{"content":"import { motion } from \"framer-motion\";\n\nexport default function FloatingParticles() {\n  const particles = Array.from({ length: 15 }).map((_, i) => ({\n    id: i,\n    size: Math.random() * 4 + 2,\n    initialX: Math.random() * 100,\n    initialY: Math.random() * 100,\n    duration: Math.random() * 10 + 10,\n    delay: Math.random() * 5,\n  }));\n\n  return (\n    <div className=\"fixed inset-0 pointer-events-none z-0\" data-testid=\"floating-particles\">\n      {particles.map((particle) => (\n        <motion.div\n          key={particle.id}\n          className=\"absolute rounded-full bg-gradient-to-r from-secondary to-primary opacity-60\"\n          style={{\n            width: particle.size,\n            height: particle.size,\n            left: `${particle.initialX}%`,\n            top: `${particle.initialY}%`,\n          }}\n          animate={{\n            y: [-20, 20, -20],\n            x: [-10, 10, -10],\n            rotate: [0, 180, 360],\n            scale: [1, 1.2, 1],\n          }}\n          transition={{\n            duration: particle.duration,\n            repeat: Infinity,\n            delay: particle.delay,\n            ease: \"easeInOut\",\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n","size_bytes":1191},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/components/navigation.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { Menu, X, Home, Calendar, Info, Mail } from \"lucide-react\";\nimport cognitoTechfestLogo from \"@assets/Untitled design_1759044466581.png\";\n\nexport default function Navigation() {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 100);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  return (\n    <motion.nav\n      className={`fixed top-0 w-full z-50 transition-all duration-300 ${\n        isScrolled ? 'nav-blur backdrop-blur-xl' : 'bg-transparent'\n      }`}\n      initial={{ y: -100 }}\n      animate={{ y: 0 }}\n      transition={{ duration: 0.6 }}\n      data-testid=\"navigation\"\n    >\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center py-4\">\n          <div className=\"flex items-center space-x-4\">\n            <img \n              src={cognitoTechfestLogo} \n              alt=\"CTF Logo\" \n              className=\"w-12 h-12 object-contain transition-opacity duration-300\"\n              loading=\"eager\"\n              decoding=\"async\"\n              data-testid=\"nav-logo\"\n            />\n            <div className=\"hidden md:flex items-center space-x-3\">\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-2xl font-bold text-foreground tracking-tight leading-none\">\n                  CAPTURE THE FLAG\n                </h1>\n                <p className=\"text-xs text-muted-foreground font-medium uppercase tracking-widest\">\n                  Cybersecurity Challenge\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"hidden md:flex items-center space-x-2\">\n            <button \n              onClick={() => scrollToSection('home')}\n              className=\"flex items-center space-x-2 px-4 py-2 rounded-lg text-sm font-medium text-muted-foreground hover:text-foreground hover:bg-muted transition-all duration-200\"\n              data-testid=\"nav-link-home\"\n            >\n              <Home className=\"w-4 h-4\" />\n              <span>Home</span>\n            </button>\n            <button \n              onClick={() => scrollToSection('event')}\n              className=\"flex items-center space-x-2 px-4 py-2 rounded-lg text-sm font-medium text-muted-foreground hover:text-foreground hover:bg-muted transition-all duration-200\"\n              data-testid=\"nav-link-event\"\n            >\n              <Calendar className=\"w-4 h-4\" />\n              <span>Event</span>\n            </button>\n            <button \n              onClick={() => scrollToSection('about')}\n              className=\"flex items-center space-x-2 px-4 py-2 rounded-lg text-sm font-medium text-muted-foreground hover:text-foreground hover:bg-muted transition-all duration-200\"\n              data-testid=\"nav-link-about\"\n            >\n              <Info className=\"w-4 h-4\" />\n              <span>About</span>\n            </button>\n            <button \n              onClick={() => scrollToSection('contact')}\n              className=\"flex items-center space-x-2 px-4 py-2 rounded-lg text-sm font-medium text-muted-foreground hover:text-foreground hover:bg-muted transition-all duration-200\"\n              data-testid=\"nav-link-contact\"\n            >\n              <Mail className=\"w-4 h-4\" />\n              <span>Contact</span>\n            </button>\n          </div>\n          \n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"md:hidden text-foreground\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            data-testid=\"nav-mobile-toggle\"\n          >\n            {isMobileMenuOpen ? <X /> : <Menu />}\n          </Button>\n        </div>\n      </div>\n\n      {/* Mobile Menu */}\n      {isMobileMenuOpen && (\n        <motion.div\n          className=\"md:hidden bg-background/95 backdrop-blur-xl border-t border-border\"\n          initial={{ opacity: 0, height: 0 }}\n          animate={{ opacity: 1, height: 'auto' }}\n          exit={{ opacity: 0, height: 0 }}\n          data-testid=\"nav-mobile-menu\"\n        >\n          <div className=\"px-4 py-6 space-y-2\">\n            <button \n              onClick={() => scrollToSection('home')}\n              className=\"flex items-center space-x-3 w-full text-left px-3 py-3 rounded-lg text-sm font-medium text-muted-foreground hover:text-foreground hover:bg-muted transition-all duration-200\"\n              data-testid=\"nav-mobile-link-home\"\n            >\n              <Home className=\"w-4 h-4\" />\n              <span>Home</span>\n            </button>\n            <button \n              onClick={() => scrollToSection('event')}\n              className=\"flex items-center space-x-3 w-full text-left px-3 py-3 rounded-lg text-sm font-medium text-muted-foreground hover:text-foreground hover:bg-muted transition-all duration-200\"\n              data-testid=\"nav-mobile-link-event\"\n            >\n              <Calendar className=\"w-4 h-4\" />\n              <span>Event</span>\n            </button>\n            <button \n              onClick={() => scrollToSection('about')}\n              className=\"flex items-center space-x-3 w-full text-left px-3 py-3 rounded-lg text-sm font-medium text-muted-foreground hover:text-foreground hover:bg-muted transition-all duration-200\"\n              data-testid=\"nav-mobile-link-about\"\n            >\n              <Info className=\"w-4 h-4\" />\n              <span>About</span>\n            </button>\n            <button \n              onClick={() => scrollToSection('contact')}\n              className=\"flex items-center space-x-3 w-full text-left px-3 py-3 rounded-lg text-sm font-medium text-muted-foreground hover:text-foreground hover:bg-muted transition-all duration-200\"\n              data-testid=\"nav-mobile-link-contact\"\n            >\n              <Mail className=\"w-4 h-4\" />\n              <span>Contact</span>\n            </button>\n          </div>\n        </motion.div>\n      )}\n    </motion.nav>\n  );\n}\n","size_bytes":6502},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"client/src/pages/home.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport Navigation from \"@/components/navigation\";\nimport AnimatedBackground from \"@/components/animated-background\";\nimport FloatingParticles from \"@/components/floating-particles\";\nimport MatrixRain from \"@/components/matrix-rain\";\nimport CustomCursor from \"@/components/custom-cursor\";\nimport CountdownTimer from \"@/components/countdown-timer\";\nimport ModernText from \"@/components/modern-text\";\nimport CyberCard from \"@/components/cyber-card\";\nimport AnimatedCounter from \"@/components/animated-counter\";\nimport FAQSection from \"@/components/faq-section\";\nimport TestimonialsSection from \"@/components/testimonials-section\";\nimport VenueMap from \"@/components/venue-map\";\nimport EventTimeline from \"@/components/event-timeline\";\nimport NewsletterSignup from \"@/components/newsletter-signup\";\nimport ParticipantCounter from \"@/components/participant-counter\";\nimport ChallengePreview from \"@/components/challenge-preview\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  Calendar, \n  Trophy, \n  Users, \n  Flag, \n  Globe, \n  Key, \n  Search, \n  Settings, \n  Network, \n  Binary,\n  Check,\n  Phone,\n  Mail,\n  Instagram,\n  MapPin,\n  Info,\n  Laptop,\n  Rocket,\n  Clock,\n  Heart\n} from \"lucide-react\";\nimport ctfCognitoLogo from \"@assets/Adobe Express - file_1759044466581.png\";\nimport offensoLogo from \"@assets/Offenso-Logo-White.png_1759068476216.webp\";\nimport cognitoTechfestLogo from \"@assets/Untitled design_1759044466581.png\";\n\nexport default function Home() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    setIsVisible(true);\n  }, []);\n\n  const handleRegistration = () => {\n    window.open('https://docs.google.com/forms/d/e/1FAIpQLSev7Ci4m418KohWOVVkdB5-UqBE8iX6b-7yeMMSJ8lcuv2TrQ/viewform?usp=header', '_blank');\n  };\n\n  const fadeInUp = {\n    initial: { opacity: 0, y: 60 },\n    animate: { opacity: 1, y: 0 },\n    transition: { duration: 0.6 }\n  };\n\n  const staggerContainer = {\n    animate: {\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background text-foreground overflow-x-hidden\">\n      <AnimatedBackground />\n      <MatrixRain />\n      <FloatingParticles />\n      <CustomCursor />\n      <Navigation />\n\n      {/* Hero Section */}\n      <section id=\"home\" className=\"relative min-h-screen flex items-center justify-center section-padding\">\n        <motion.div\n          className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center z-10\"\n          initial=\"initial\"\n          animate=\"animate\"\n          variants={staggerContainer}\n        >\n          {/* CTF Cognito Logo */}\n          <motion.div className=\"mb-0 -mt-8 sm:-mt-12 flex justify-center\" variants={fadeInUp}>\n            <div className=\"relative filter drop-shadow-[0_0_24px_rgba(0,255,255,0.35)]\">\n              <img \n                src={ctfCognitoLogo} \n                alt=\"CTF Cognito Logo\" \n                className=\"h-auto w-40 sm:w-56 md:w-72 lg:w-80 object-contain transition-opacity duration-300\" \n                loading=\"eager\"\n                decoding=\"async\"\n                data-testid=\"ctf-cognito-logo\"\n              />\n            </div>\n          </motion.div>\n\n          {/* Main Heading */}\n          <motion.div variants={fadeInUp}>\n            <ModernText \n              text=\"CTF COGNITO\" \n              className=\"text-3xl sm:text-4xl md:text-6xl lg:text-8xl font-orbitron font-black mb-4 sm:mb-6 text-gradient leading-tight\"\n              data-testid=\"main-heading\"\n            />\n          </motion.div>\n          \n          <motion.p \n            className=\"text-base sm:text-lg md:text-xl lg:text-3xl text-muted-foreground mb-4 sm:mb-6 font-semibold tracking-wide px-4 sm:px-0\"\n            variants={fadeInUp}\n            data-testid=\"subtitle\"\n          >\n            All Kerala Tech Fest Cybersecurity Challenge\n          </motion.p>\n          \n          <motion.p \n            className=\"text-lg sm:text-xl md:text-2xl text-secondary mb-8 sm:mb-12 md:mb-16 font-medium tracking-wider\"\n            variants={fadeInUp}\n            data-testid=\"organizer-text\"\n          >\n            Capture The Flag\n          </motion.p>\n\n          {/* Countdown Timer */}\n          <motion.div className=\"mb-8 sm:mb-12 px-4 sm:px-0\" variants={fadeInUp}>\n            <h3 className=\"text-xl sm:text-2xl font-orbitron font-bold mb-4 sm:mb-6 text-primary\" data-testid=\"countdown-heading\">\n              Event Countdown\n            </h3>\n            <CountdownTimer targetDate=\"2025-10-17T10:00:00\" />\n          </motion.div>\n\n          {/* CTA Buttons */}\n          <motion.div \n            className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center px-4 sm:px-0 max-w-md sm:max-w-none mx-auto\"\n            variants={fadeInUp}\n          >\n            <Button\n              onClick={handleRegistration}\n              className=\"inline-flex items-center justify-center w-full sm:w-auto px-4 sm:px-6 md:px-8 py-3 sm:py-4 bg-primary hover:bg-primary/90 text-primary-foreground font-semibold rounded-lg transition-colors duration-300\"\n              data-testid=\"button-register\"\n            >\n              <Users className=\"mr-2 sm:mr-3 h-4 w-4 sm:h-5 sm:w-5\" />\n              Register Now\n            </Button>\n            <Button\n              variant=\"outline\"\n              className=\"inline-flex items-center justify-center w-full sm:w-auto px-4 sm:px-6 md:px-8 py-3 sm:py-4 border-2 border-secondary text-secondary hover:bg-secondary hover:text-secondary-foreground rounded-lg transition-colors duration-300\"\n              onClick={() => document.getElementById('event')?.scrollIntoView({ behavior: 'smooth' })}\n              data-testid=\"button-learn-more\"\n            >\n              <Info className=\"mr-2 sm:mr-3 h-4 w-4 sm:h-5 sm:w-5\" />\n              Learn More\n            </Button>\n          </motion.div>\n        </motion.div>\n      </section>\n\n      {/* Event Details Section */}\n      <section id=\"event\" className=\"relative section-padding bg-card/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 40 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6 text-foreground\" data-testid=\"event-details-heading\">\n              Event Details\n            </h2>\n            <p className=\"text-xl md:text-2xl text-muted-foreground max-w-4xl mx-auto leading-relaxed\">\n              Join the ultimate cybersecurity challenge and test your skills against the best minds in Kerala\n            </p>\n          </motion.div>\n\n          <motion.div \n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {/* Date & Time */}\n            <motion.div variants={fadeInUp}>\n              <CyberCard className=\"text-center\" data-testid=\"card-date-time\">\n                <Calendar className=\"text-4xl text-primary mb-4 mx-auto\" />\n                <h3 className=\"text-2xl md:text-3xl font-orbitron font-black mb-6 text-gradient\">Date & Time</h3>\n                <div className=\"space-y-4\">\n                  <p className=\"text-lg font-semibold text-secondary\">October 17, 2025</p>\n                  \n                  <div className=\"bg-card/30 rounded-lg p-4 space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-muted-foreground\">Registration</span>\n                      <span className=\"text-foreground font-medium\">9:00 AM - 10:00 AM</span>\n                    </div>\n                    <div className=\"border-t border-border/50\"></div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-muted-foreground\">Competition</span>\n                      <span className=\"text-primary font-semibold\">10:00 AM - 4:00 PM</span>\n                    </div>\n                    <div className=\"border-t border-border/50\"></div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-muted-foreground\">Results</span>\n                      <span className=\"text-foreground font-medium\">4:30 PM - 5:00 PM</span>\n                    </div>\n                  </div>\n                  \n                  <p className=\"text-sm text-muted-foreground text-center\">6 Hours of Intense Competition</p>\n                </div>\n              </CyberCard>\n            </motion.div>\n\n            {/* Prizes */}\n            <motion.div variants={fadeInUp}>\n              <CyberCard className=\"text-center\" data-testid=\"card-prizes\">\n                <Trophy className=\"text-4xl text-primary mb-4 mx-auto\" />\n                <h3 className=\"text-2xl md:text-3xl font-orbitron font-black mb-6 text-gradient\">Prizes</h3>\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-lg\">1st Place</span>\n                    <span className=\"text-xl font-bold text-secondary\">\n                      ₹<AnimatedCounter end={5000} />\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-lg\">2nd Place</span>\n                    <span className=\"text-xl font-bold text-accent\">\n                      ₹<AnimatedCounter end={3000} />\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground mt-4\">+ Certificates for all participants</p>\n                </div>\n              </CyberCard>\n            </motion.div>\n\n            {/* Registration */}\n            <motion.div variants={fadeInUp}>\n              <CyberCard className=\"text-center\" data-testid=\"card-registration\">\n                <Users className=\"text-4xl text-primary mb-4 mx-auto\" />\n                <h3 className=\"text-2xl md:text-3xl font-orbitron font-black mb-6 text-gradient\">Registration</h3>\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-lg\">Pre-Registration</span>\n                    <span className=\"text-xl font-bold text-secondary\">₹75</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-lg\">Spot Registration</span>\n                    <span className=\"text-xl font-bold text-accent\">₹80</span>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">Solo or Duo Teams (1-2 members)</p>\n                  <p className=\"text-sm text-destructive font-semibold\">Deadline: Oct 15, 2025</p>\n                </div>\n              </CyberCard>\n            </motion.div>\n          </motion.div>\n\n          {/* Organizers */}\n          <motion.div \n            className=\"mt-16\"\n            initial={{ opacity: 0, y: 40 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n          >\n            <h3 className=\"text-3xl font-orbitron font-bold text-center mb-12 text-gradient\" data-testid=\"organizers-heading\">\n              Organized By\n            </h3>\n            <div className=\"flex flex-col md:flex-row items-center justify-center space-y-8 md:space-y-0 md:space-x-16\">\n              {/* Offenso Logo */}\n              <div className=\"text-center\" data-testid=\"organizer-offenso\">\n                <div className=\"mb-4 p-4 bg-card/30 rounded-lg border border-border/50\">\n                  <img \n                    src={offensoLogo} \n                    alt=\"Offenso Logo\" \n                    className=\"w-40 h-20 object-contain mx-auto filter brightness-110 hover:brightness-125 transition-all duration-300\" \n                    loading=\"lazy\"\n                    decoding=\"async\"\n                  />\n                </div>\n                <p className=\"text-lg text-muted-foreground\">In Association With</p>\n                <p className=\"text-xl font-semibold text-primary\">Offenso Hackers Academy</p>\n              </div>\n              \n              {/* College Logo */}\n              <div className=\"text-center\" data-testid=\"organizer-college\">\n                <div className=\"mb-4\">\n                  <img \n                    src={cognitoTechfestLogo} \n                    alt=\"Cognito Techfest Logo\" \n                    className=\"w-24 h-24 object-contain mx-auto logo-glow transition-opacity duration-300\" \n                    loading=\"lazy\"\n                    decoding=\"async\"\n                  />\n                </div>\n                <p className=\"text-lg text-muted-foreground\">Hosted By</p>\n                <p className=\"text-xl font-semibold text-primary\">Student Committee Cybersecurity</p>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* About CTF Section */}\n      <section id=\"about\" className=\"relative section-padding bg-card/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 40 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6 text-foreground\" data-testid=\"about-ctf-heading\">\n              About CTF\n            </h2>\n            <p className=\"text-xl md:text-2xl text-muted-foreground max-w-4xl mx-auto leading-relaxed\">\n              Capture The Flag is a cybersecurity competition designed to challenge and develop your hacking skills through real-world scenarios\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <motion.div \n              className=\"space-y-8\"\n              variants={staggerContainer}\n              initial=\"initial\"\n              whileInView=\"animate\"\n              viewport={{ once: true }}\n            >\n              <motion.div variants={fadeInUp}>\n                <CyberCard data-testid=\"card-what-is-ctf\">\n                  <h3 className=\"text-2xl font-orbitron font-bold mb-4 text-primary\">\n                    <Flag className=\"inline mr-3\" />What is CTF?\n                  </h3>\n                  <p className=\"text-muted-foreground leading-relaxed\">\n                    Capture The Flag competitions are cybersecurity events where participants solve challenges \n                    across various domains including web security, cryptography, reverse engineering, \n                    forensics, and penetration testing to find hidden \"flags\".\n                  </p>\n                </CyberCard>\n              </motion.div>\n\n              <motion.div variants={fadeInUp}>\n                <CyberCard data-testid=\"card-team-format\">\n                  <h3 className=\"text-2xl font-orbitron font-bold mb-4 text-primary\">\n                    <Users className=\"inline mr-3\" />Team Format\n                  </h3>\n                  <p className=\"text-muted-foreground leading-relaxed\">\n                    Participate individually or form a team of maximum 2 members. \n                    Collaboration and diverse skill sets often lead to better performance in solving complex challenges.\n                  </p>\n                </CyberCard>\n              </motion.div>\n\n              <motion.div variants={fadeInUp}>\n                <CyberCard data-testid=\"card-eligibility\">\n                  <h3 className=\"text-2xl font-orbitron font-bold mb-4 text-primary\">\n                    <Globe className=\"inline mr-3\" />Eligibility\n                  </h3>\n                  <p className=\"text-muted-foreground leading-relaxed\">\n                    Open to everyone! Whether you're a student, professional, or cybersecurity enthusiast, \n                    all skill levels are welcome to participate and learn.\n                  </p>\n                </CyberCard>\n              </motion.div>\n            </motion.div>\n\n            <motion.div \n              className=\"space-y-8\"\n              variants={staggerContainer}\n              initial=\"initial\"\n              whileInView=\"animate\"\n              viewport={{ once: true }}\n            >\n              <motion.div variants={fadeInUp}>\n                <CyberCard data-testid=\"card-challenge-categories\">\n                  <h3 className=\"text-2xl font-orbitron font-bold mb-6 text-primary\">\n                    <Flag className=\"inline mr-3\" />Challenge Categories\n                  </h3>\n                  <div className=\"space-y-4\">\n                    {[\n                      { icon: Globe, label: \"Web Exploitation\" },\n                      { icon: Search, label: \"OSINT (Open-Source Intelligence)\" },\n                      { icon: Key, label: \"Cryptography\" },\n                      { icon: Search, label: \"Forensics\" },\n                      { icon: Settings, label: \"Reverse Engineering\" }\n                    ].map((category, index) => (\n                      <div key={index} className=\"flex items-center space-x-3\">\n                        <category.icon className=\"text-secondary\" size={20} />\n                        <span className=\"text-foreground\">{category.label}</span>\n                      </div>\n                    ))}\n                  </div>\n                </CyberCard>\n              </motion.div>\n\n              <motion.div variants={fadeInUp}>\n                <CyberCard data-testid=\"card-rules\">\n                  <h3 className=\"text-2xl font-orbitron font-bold mb-4 text-primary\">\n                    <Check className=\"inline mr-3\" />Rules & Guidelines\n                  </h3>\n                  <ul className=\"space-y-2 text-muted-foreground\">\n                    {[\n                      \"All challenges must be solved within the provided environment\",\n                      \"No brute forcing challenges or platforms unless explicitly mentioned\",\n                      \"Collaboration between different teams is strictly prohibited\",\n                      \"Flags must be submitted exactly as instructed\",\n                      \"No attacking other participants or infrastructure outside intended scope\",\n                      \"White-hat hacking competition only - ethical conduct required\"\n                    ].map((rule, index) => (\n                      <li key={index} className=\"flex items-start space-x-2\">\n                        <Check className=\"text-secondary mt-1 flex-shrink-0\" size={16} />\n                        <span>{rule}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </CyberCard>\n              </motion.div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact & Venue Section */}\n      <section id=\"contact\" className=\"relative section-padding\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 40 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6 text-foreground\" data-testid=\"contact-venue-heading\">\n              Contact & Venue\n            </h2>\n            <p className=\"text-xl md:text-2xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n              Get in touch with us for any queries or additional information about the event\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            {/* Contact Information */}\n            <motion.div \n              className=\"space-y-8\"\n              variants={staggerContainer}\n              initial=\"initial\"\n              whileInView=\"animate\"\n              viewport={{ once: true }}\n            >\n              <motion.div variants={fadeInUp}>\n                <CyberCard data-testid=\"card-contact-info\">\n                  <h3 className=\"text-2xl font-orbitron font-bold mb-6 text-primary\">\n                    <Mail className=\"inline mr-3\" />Contact Information\n                  </h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center space-x-4\">\n                      <Phone className=\"text-secondary\" />\n                      <div>\n                        <p className=\"font-semibold text-foreground\">Phone</p>\n                        <p className=\"text-muted-foreground\">+91 9495909680</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-4\">\n                      <Mail className=\"text-secondary\" />\n                      <div>\n                        <p className=\"font-semibold text-foreground\">Email</p>\n                        <a href=\"mailto:abhinavkoolath@gmail.com\" className=\"text-muted-foreground hover:text-secondary transition-colors cursor-pointer\">abhinavkoolath@gmail.com</a>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-4\">\n                      <Instagram className=\"text-secondary\" />\n                      <div>\n                        <p className=\"font-semibold text-foreground\">Instagram</p>\n                        <a href=\"https://www.instagram.com/ctf_cognito/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-muted-foreground hover:text-secondary transition-colors cursor-pointer\">@ctf_cognito</a>\n                      </div>\n                    </div>\n                  </div>\n                </CyberCard>\n              </motion.div>\n\n              <motion.div variants={fadeInUp}>\n                <CyberCard data-testid=\"card-coordinators\">\n                  <h3 className=\"text-2xl font-orbitron font-bold mb-6 text-primary\">\n                    <Users className=\"inline mr-3\" />Event Coordinators\n                  </h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center space-x-4\">\n                      <Phone className=\"text-secondary\" />\n                      <div>\n                        <p className=\"font-semibold text-foreground\">Abhinav K</p>\n                        <a href=\"tel:+917306989680\" className=\"text-muted-foreground hover:text-secondary transition-colors cursor-pointer\">+91 7306989680</a>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-4\">\n                      <Phone className=\"text-secondary\" />\n                      <div>\n                        <p className=\"font-semibold text-foreground\">Anfas PK</p>\n                        <a href=\"tel:+919037484202\" className=\"text-muted-foreground hover:text-secondary transition-colors cursor-pointer\">+91 9037484202</a>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-4\">\n                      <Phone className=\"text-secondary\" />\n                      <div>\n                        <p className=\"font-semibold text-foreground\">Suhail</p>\n                        <a href=\"tel:+917025642469\" className=\"text-muted-foreground hover:text-secondary transition-colors cursor-pointer\">+91 70256 42469</a>\n                      </div>\n                    </div>\n                  </div>\n                </CyberCard>\n              </motion.div>\n\n              <motion.div variants={fadeInUp}>\n                <CyberCard data-testid=\"card-questions\">\n                  <h3 className=\"text-2xl font-orbitron font-bold mb-6 text-primary\">\n                    <Info className=\"inline mr-3\" />Have Questions?\n                  </h3>\n                  <p className=\"text-muted-foreground mb-6\">\n                    Feel free to reach out to our organizing team for any clarifications about the event, \n                    registration process, or technical requirements.\n                  </p>\n                  <Button \n                    className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\"\n                    onClick={() => window.open('tel:+919495909680', '_self')}\n                    data-testid=\"button-contact-organizers\"\n                  >\n                    <Phone className=\"mr-2 h-4 w-4\" />\n                    Contact Organizers\n                  </Button>\n                </CyberCard>\n              </motion.div>\n            </motion.div>\n\n            {/* Venue Information */}\n            <motion.div \n              className=\"space-y-8\"\n              variants={staggerContainer}\n              initial=\"initial\"\n              whileInView=\"animate\"\n              viewport={{ once: true }}\n            >\n              <motion.div variants={fadeInUp}>\n                <CyberCard data-testid=\"card-venue-details\">\n                  <h3 className=\"text-2xl font-orbitron font-bold mb-6 text-primary\">\n                    <MapPin className=\"inline mr-3\" />Venue Details\n                  </h3>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <p className=\"font-semibold text-foreground text-lg\">Royal College of Engineering and Technology</p>\n                      <p className=\"text-muted-foreground\">\n                        Akkikavu, Thrissur, Kerala 680501<br />\n                        Computer Science Department<br />\n                        IIT Bombay Lab\n                      </p>\n                    </div>\n                    <div className=\"flex items-start space-x-4 mt-6\">\n                      <Info className=\"text-secondary mt-1\" />\n                      <div>\n                        <p className=\"font-semibold text-foreground\">Additional Information</p>\n                        <ul className=\"text-muted-foreground text-sm space-y-1 mt-2\">\n                          <li>• High-speed internet connectivity provided</li>\n                          <li>• Power outlets available at all workstations</li>\n                          <li>• Parking facilities available</li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </CyberCard>\n              </motion.div>\n\n              <motion.div variants={fadeInUp}>\n                <CyberCard data-testid=\"card-what-to-bring\">\n                  <h3 className=\"text-2xl font-orbitron font-bold mb-6 text-primary\">\n                    <Laptop className=\"inline mr-3\" />What to Bring\n                  </h3>\n                  <div className=\"space-y-3\">\n                    {[\n                      \"Laptop with Kali Linux/Ubuntu preferred (or use lab PCs provided)\",\n                      \"Charger and extension cord (if bringing own laptop)\",\n                      \"Valid ID proof for verification\",\n                      \"Notebook and pen for rough work\"\n                    ].map((item, index) => (\n                      <div key={index} className=\"flex items-center space-x-3\">\n                        <Check className=\"text-secondary flex-shrink-0\" size={16} />\n                        <span className=\"text-foreground\">{item}</span>\n                      </div>\n                    ))}\n                  </div>\n                </CyberCard>\n              </motion.div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Participant Counter Stats */}\n      <ParticipantCounter />\n\n      {/* Challenge Preview Section */}\n      <ChallengePreview />\n\n      {/* Event Timeline & Venue Map Side by Side */}\n      <section className=\"section-padding relative z-10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <EventTimeline />\n            <VenueMap />\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <TestimonialsSection />\n\n      {/* FAQ Section */}\n      <FAQSection />\n\n      {/* Newsletter Signup */}\n      <NewsletterSignup />\n\n      {/* Final CTA Section */}\n      <section className=\"relative section-padding bg-gradient-to-r from-primary/10 via-accent/10 to-secondary/10\">\n        <motion.div \n          className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\"\n          initial={{ opacity: 0, y: 40 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.6 }}\n        >\n          <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6 text-gradient\" data-testid=\"final-cta-heading\">\n            Ready to Hack the Future?\n          </h2>\n          <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n            Join Kerala's premier cybersecurity challenge and compete with the brightest minds. \n            Register now and secure your spot in this epic battle of skills!\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\">\n            <Button\n              onClick={handleRegistration}\n              className=\"inline-flex items-center px-8 py-4 bg-primary hover:bg-primary/90 text-primary-foreground font-semibold rounded-lg transition-all duration-300 animate-pulse-glow text-lg\"\n              data-testid=\"button-final-register\"\n            >\n              <Rocket className=\"mr-3 h-5 w-5\" />\n              Register for CTF Cognito\n            </Button>\n            <Button\n              variant=\"outline\"\n              className=\"inline-flex items-center px-8 py-4 border-2 border-secondary text-secondary hover:bg-secondary hover:text-secondary-foreground rounded-lg transition-all duration-300 text-lg\"\n              onClick={() => document.getElementById('contact')?.scrollIntoView({ behavior: 'smooth' })}\n              data-testid=\"button-contact-final\"\n            >\n              <Phone className=\"mr-3 h-5 w-5\" />\n              Contact Us\n            </Button>\n          </div>\n\n          <div className=\"flex justify-center items-center space-x-8 text-muted-foreground\">\n            <div className=\"flex items-center space-x-2\">\n              <Calendar className=\"text-primary\" size={16} />\n              <span>Oct 17, 2025</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Clock className=\"text-primary\" size={16} />\n              <span>10 AM - 4 PM</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Trophy className=\"text-primary\" size={16} />\n              <span>₹8K+ Prizes</span>\n            </div>\n          </div>\n        </motion.div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"relative bg-card/50 border-t border-border section-padding\">\n        \n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          {/* Top Section with Enhanced Layout */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8 mb-12\">\n            {/* CTF Cognito Brand */}\n            <div className=\"md:col-span-2\">\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.6 }}\n              >\n                <h3 className=\"text-2xl font-orbitron font-bold mb-4 text-foreground\" data-testid=\"footer-title\">\n                  CTF COGNITO 2025\n                </h3>\n                <p className=\"text-lg text-muted-foreground leading-relaxed mb-6\">\n                  Kerala's premier cybersecurity challenge featuring cutting-edge security competitions,\n                  networking opportunities, and skill development workshops.\n                </p>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Calendar className=\"text-primary\" size={16} />\n                    <span className=\"text-foreground\">October 17, 2025</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Clock className=\"text-primary\" size={16} />\n                    <span className=\"text-foreground\">10 AM - 4 PM</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Trophy className=\"text-primary\" size={16} />\n                    <span className=\"text-foreground\">₹8,000+ Prizes</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Users className=\"text-primary\" size={16} />\n                    <span className=\"text-foreground\">Solo/Duo Teams</span>\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n            \n            {/* Quick Navigation */}\n            <div>\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.6, delay: 0.1 }}\n              >\n                <h4 className=\"text-xl font-orbitron font-bold mb-6 text-secondary\">Quick Links</h4>\n                <div className=\"space-y-3\">\n                  <a href=\"#home\" className=\"block text-muted-foreground hover:text-primary transition-all duration-300 hover:translate-x-2 flex items-center space-x-2\" data-testid=\"footer-link-home\">\n                    <span className=\"w-1 h-1 bg-primary rounded-full opacity-50\"></span>\n                    <span>Home</span>\n                  </a>\n                  <a href=\"#event\" className=\"block text-muted-foreground hover:text-primary transition-all duration-300 hover:translate-x-2 flex items-center space-x-2\" data-testid=\"footer-link-event\">\n                    <span className=\"w-1 h-1 bg-primary rounded-full opacity-50\"></span>\n                    <span>Event Details</span>\n                  </a>\n                  <a href=\"#about\" className=\"block text-muted-foreground hover:text-primary transition-all duration-300 hover:translate-x-2 flex items-center space-x-2\" data-testid=\"footer-link-about\">\n                    <span className=\"w-1 h-1 bg-primary rounded-full opacity-50\"></span>\n                    <span>About CTF</span>\n                  </a>\n                  <a href=\"#contact\" className=\"block text-muted-foreground hover:text-primary transition-all duration-300 hover:translate-x-2 flex items-center space-x-2\" data-testid=\"footer-link-contact\">\n                    <span className=\"w-1 h-1 bg-primary rounded-full opacity-50\"></span>\n                    <span>Contact</span>\n                  </a>\n                </div>\n              </motion.div>\n            </div>\n            \n            {/* Connect & Follow */}\n            <div>\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.6, delay: 0.2 }}\n              >\n                <h4 className=\"text-xl font-orbitron font-bold mb-6 text-secondary\">Connect</h4>\n                <div className=\"space-y-4\">\n                  <p className=\"text-muted-foreground text-sm mb-4\">\n                    Follow us for updates and cybersecurity insights\n                  </p>\n                  <div className=\"flex space-x-4\">\n                    <a href=\"https://www.instagram.com/ctf_cognito/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"group p-3 rounded-lg bg-card/50 border border-primary/20 hover:border-primary/50 transition-all duration-300 hover:scale-110 neon-border\" data-testid=\"footer-social-instagram\">\n                      <Instagram className=\"text-muted-foreground group-hover:text-primary transition-colors\" size={20} />\n                    </a>\n                    <div className=\"relative group\">\n                      <div className=\"p-3 rounded-lg bg-card/50 border border-primary/20 hover:border-primary/50 transition-all duration-300 hover:scale-110 neon-border cursor-not-allowed opacity-60\" data-testid=\"footer-social-twitter\">\n                        <svg className=\"w-5 h-5 text-muted-foreground group-hover:text-primary transition-colors\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path d=\"M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z\"/>\n                        </svg>\n                      </div>\n                      <div className=\"absolute -top-10 left-1/2 transform -translate-x-1/2 bg-background border border-primary/30 text-primary px-2 py-1 rounded text-xs opacity-0 group-hover:opacity-100 transition-opacity duration-300 whitespace-nowrap z-10\">\n                        Coming Soon\n                      </div>\n                    </div>\n                    <a href=\"https://www.linkedin.com/in/abhinavkoolath\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"group p-3 rounded-lg bg-card/50 border border-primary/20 hover:border-primary/50 transition-all duration-300 hover:scale-110 neon-border\" data-testid=\"footer-social-linkedin\">\n                      <svg className=\"w-5 h-5 text-muted-foreground group-hover:text-primary transition-colors\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n                      </svg>\n                    </a>\n                    <div className=\"relative group\">\n                      <div className=\"p-3 rounded-lg bg-card/50 border border-primary/20 hover:border-primary/50 transition-all duration-300 hover:scale-110 neon-border cursor-not-allowed opacity-60\" data-testid=\"footer-social-telegram\">\n                        <svg className=\"w-5 h-5 text-muted-foreground group-hover:text-primary transition-colors\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path d=\"M12 0C5.376 0 0 5.376 0 12s5.376 12 12 12 12-5.376 12-12S18.624 0 12 0zm5.568 8.16c-.18 1.896-.96 6.504-1.356 8.628-.168.9-.504 1.2-.816 1.236-.696.06-1.224-.456-1.896-.9-1.056-.696-1.656-1.128-2.676-1.8-1.188-.78-.42-1.212.264-1.908.18-.18 3.252-2.976 3.312-3.228a.24.24 0 00-.06-.216c-.072-.06-.168-.036-.24-.024-.096.024-1.62 1.032-4.572 3.036-.432.3-.816.444-1.164.432-.384-.012-1.116-.216-1.668-.396-.66-.216-1.188-.336-1.14-.708.024-.192.156-.384.396-.576 1.716-.756 2.856-1.344 3.396-1.728 1.548-.756 3.132-1.584 4.44-3.084z\"/>\n                        </svg>\n                      </div>\n                      <div className=\"absolute -top-10 left-1/2 transform -translate-x-1/2 bg-background border border-primary/30 text-primary px-2 py-1 rounded text-xs opacity-0 group-hover:opacity-100 transition-opacity duration-300 whitespace-nowrap z-10\">\n                        Coming Soon\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n          </div>\n          \n          {/* Cyber Separator */}\n          <div className=\"cyber-separator mb-8\"></div>\n          \n          {/* Bottom Section */}\n          <motion.div \n            className=\"text-center\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6, delay: 0.3 }}\n          >\n            <div className=\"mb-6\">\n              <p className=\"text-lg font-orbitron font-semibold text-gradient mb-2\" data-testid=\"footer-organizer\">\n                Capture The Flag\n              </p>\n              <p className=\"text-muted-foreground mb-4\">\n                Organized by Royal College of Engineering and Technology\n              </p>\n              <div className=\"flex items-center justify-center space-x-2\">\n                <span className=\"text-muted-foreground\">in association with</span>\n                <img \n                  src={offensoLogo} \n                  alt=\"Offenso Logo\" \n                  className=\"w-20 h-10 object-contain filter brightness-110 transition-opacity duration-300\" \n                  loading=\"lazy\"\n                  decoding=\"async\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex flex-col md:flex-row justify-between items-center pt-6 border-t border-primary/20\">\n              <p className=\"text-muted-foreground mb-4 md:mb-0\" data-testid=\"footer-copyright\">\n                © 2025 RCET. All rights reserved. | CTF Cognito\n              </p>\n              <p className=\"text-sm text-muted-foreground flex items-center\" data-testid=\"footer-credit\">\n                Crafted with <Heart className=\"inline text-destructive mx-1 animate-pulse\" size={16} /> by Cybersecurity Student Coordinators\n              </p>\n            </div>\n          </motion.div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","size_bytes":41867},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Inter:wght@300;400;500;600;700&family=Source+Code+Pro:wght@400;500;600&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(240, 20%, 6%);\n  --foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 20%, 8%);\n  --card-foreground: hsl(0, 0%, 95%);\n  --popover: hsl(240, 20%, 8%);\n  --popover-foreground: hsl(0, 0%, 95%);\n  --primary: hsl(292, 76%, 58%);\n  --primary-foreground: hsl(0, 0%, 98%);\n  --secondary: hsl(187, 85%, 53%);\n  --secondary-foreground: hsl(240, 20%, 6%);\n  --muted: hsl(240, 20%, 12%);\n  --muted-foreground: hsl(240, 10%, 60%);\n  --accent: hsl(217, 91%, 60%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 20%, 16%);\n  --input: hsl(240, 20%, 12%);\n  --ring: hsl(292, 76%, 58%);\n  --chart-1: hsl(292, 76%, 58%);\n  --chart-2: hsl(187, 85%, 53%);\n  --chart-3: hsl(217, 91%, 60%);\n  --chart-4: hsl(147, 78%, 42%);\n  --chart-5: hsl(341, 75%, 51%);\n  --sidebar: hsl(240, 20%, 8%);\n  --sidebar-foreground: hsl(0, 0%, 95%);\n  --sidebar-primary: hsl(292, 76%, 58%);\n  --sidebar-primary-foreground: hsl(0, 0%, 98%);\n  --sidebar-accent: hsl(240, 20%, 12%);\n  --sidebar-accent-foreground: hsl(292, 76%, 58%);\n  --sidebar-border: hsl(240, 20%, 16%);\n  --sidebar-ring: hsl(292, 76%, 58%);\n  --font-sans: 'Inter', sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: 'Source Code Pro', monospace;\n  --font-orbitron: 'Orbitron', monospace;\n  --font-code: 'Source Code Pro', monospace;\n  --radius: 0.75rem;\n}\n\n.dark {\n  --background: hsl(240, 20%, 6%);\n  --foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 20%, 8%);\n  --card-foreground: hsl(0, 0%, 95%);\n  --popover: hsl(240, 20%, 8%);\n  --popover-foreground: hsl(0, 0%, 95%);\n  --primary: hsl(292, 76%, 58%);\n  --primary-foreground: hsl(0, 0%, 98%);\n  --secondary: hsl(187, 85%, 53%);\n  --secondary-foreground: hsl(240, 20%, 6%);\n  --muted: hsl(240, 20%, 12%);\n  --muted-foreground: hsl(240, 10%, 60%);\n  --accent: hsl(217, 91%, 60%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 20%, 16%);\n  --input: hsl(240, 20%, 12%);\n  --ring: hsl(292, 76%, 58%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    overflow-x: hidden;\n  }\n\n  /* Image loading optimization */\n  img {\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: crisp-edges;\n  }\n\n  /* Cyber-themed Scrollbar Styling */\n  ::-webkit-scrollbar {\n    width: 12px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: hsl(240, 20%, 8%);\n    border-radius: 6px;\n    border: 1px solid hsl(240, 20%, 16%);\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: linear-gradient(180deg, \n      hsl(292, 76%, 58%) 0%, \n      hsl(187, 85%, 53%) 50%, \n      hsl(217, 91%, 60%) 100%);\n    border-radius: 6px;\n    border: 2px solid hsl(240, 20%, 8%);\n    box-shadow: \n      0 0 10px rgba(147, 51, 234, 0.4),\n      inset 0 0 5px rgba(6, 182, 212, 0.2);\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: linear-gradient(180deg, \n      hsl(292, 76%, 65%) 0%, \n      hsl(187, 85%, 60%) 50%, \n      hsl(217, 91%, 67%) 100%);\n    box-shadow: \n      0 0 15px rgba(147, 51, 234, 0.6),\n      0 0 25px rgba(6, 182, 212, 0.3),\n      inset 0 0 8px rgba(6, 182, 212, 0.3);\n  }\n\n  ::-webkit-scrollbar-thumb:active {\n    background: linear-gradient(180deg, \n      hsl(292, 76%, 70%) 0%, \n      hsl(187, 85%, 65%) 50%, \n      hsl(217, 91%, 72%) 100%);\n    box-shadow: \n      0 0 20px rgba(147, 51, 234, 0.8),\n      0 0 30px rgba(6, 182, 212, 0.5),\n      inset 0 0 10px rgba(6, 182, 212, 0.4);\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: hsl(240, 20%, 8%);\n  }\n\n  /* Firefox Scrollbar Support */\n  html {\n    scrollbar-width: thin;\n    scrollbar-color: hsl(292, 76%, 58%) hsl(240, 20%, 8%);\n  }\n}\n\n/* Custom Fonts */\n.font-orbitron {\n  font-family: var(--font-orbitron);\n}\n\n.font-code {\n  font-family: var(--font-code);\n}\n\n/* Background Effects */\n.matrix-bg {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -2;\n  background: radial-gradient(circle at 50% 50%, rgba(147, 51, 234, 0.1) 0%, transparent 50%);\n}\n\n.matrix-rain {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(to bottom, \n    rgba(6, 182, 212, 0.1) 0%, \n    rgba(147, 51, 234, 0.1) 50%, \n    rgba(236, 72, 153, 0.1) 100%);\n}\n\n.circuit-pattern {\n  background-image: \n    linear-gradient(90deg, rgba(6, 182, 212, 0.1) 1px, transparent 1px),\n    linear-gradient(rgba(147, 51, 234, 0.1) 1px, transparent 1px);\n  background-size: 20px 20px;\n  animation: circuit 8s linear infinite;\n}\n\n/* Animations */\n@keyframes matrix {\n  0% { transform: translateY(-100%); }\n  100% { transform: translateY(100vh); }\n}\n\n@keyframes glitch {\n  0%, 100% { \n    transform: translate(0);\n    filter: hue-rotate(0deg);\n  }\n  10% { transform: translate(-2px, 2px); }\n  20% { transform: translate(-4px, -2px); }\n  30% { transform: translate(4px, 2px); }\n  40% { transform: translate(-2px, -2px); }\n  50% { transform: translate(2px, 2px); filter: hue-rotate(90deg); }\n  60% { transform: translate(-4px, 2px); }\n  70% { transform: translate(4px, -2px); }\n  80% { transform: translate(-2px, 2px); }\n  90% { transform: translate(2px, -2px); filter: hue-rotate(180deg); }\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  50% { transform: translateY(-20px) rotate(180deg); }\n}\n\n@keyframes pulse-glow {\n  0% { box-shadow: 0 0 20px rgba(147, 51, 234, 0.5); }\n  100% { box-shadow: 0 0 40px rgba(147, 51, 234, 0.8), 0 0 60px rgba(6, 182, 212, 0.3); }\n}\n\n@keyframes circuit {\n  0%, 100% { opacity: 0.3; }\n  50% { opacity: 1; }\n}\n\n@keyframes holographic {\n  0%, 100% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n}\n\n/* Component Styles */\n.glitch-text {\n  position: relative;\n}\n\n.glitch-text::before,\n.glitch-text::after {\n  content: attr(data-text);\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.glitch-text::before {\n  animation: glitch 2s infinite;\n  color: hsl(187, 85%, 53%);\n  z-index: -1;\n}\n\n.glitch-text::after {\n  animation: glitch 2s infinite reverse;\n  color: hsl(292, 76%, 58%);\n  z-index: -2;\n}\n\n.holographic {\n  background: linear-gradient(45deg, \n    rgba(6, 182, 212, 0.2) 0%, \n    rgba(147, 51, 234, 0.2) 25%, \n    rgba(236, 72, 153, 0.2) 50%, \n    rgba(59, 130, 246, 0.2) 75%, \n    rgba(6, 182, 212, 0.2) 100%);\n  background-size: 400% 400%;\n  animation: holographic 4s ease infinite;\n}\n\n.cyber-border {\n  position: relative;\n  border: 2px solid transparent;\n  background: linear-gradient(hsl(var(--background)), hsl(var(--background))) padding-box,\n              linear-gradient(45deg, hsl(187, 85%, 53%), hsl(292, 76%, 58%), hsl(217, 91%, 60%)) border-box;\n}\n\n.countdown-digit {\n  background: linear-gradient(135deg, rgba(6, 182, 212, 0.2), rgba(147, 51, 234, 0.2));\n  border: 1px solid rgba(6, 182, 212, 0.3);\n  backdrop-filter: blur(10px);\n}\n\n.nav-blur {\n  backdrop-filter: blur(20px) saturate(180%);\n  background: rgba(15, 15, 35, 0.8);\n  border-bottom: 1px solid rgba(6, 182, 212, 0.2);\n}\n\n.card-hover {\n  transition: all 0.3s ease;\n}\n\n.card-hover:hover {\n  transform: translateY(-8px);\n  box-shadow: 0 20px 40px rgba(147, 51, 234, 0.3);\n}\n\n.logo-glow {\n  filter: drop-shadow(0 0 20px rgba(147, 51, 234, 0.6));\n}\n\n.text-gradient {\n  background: linear-gradient(45deg, hsl(187, 85%, 53%), hsl(292, 76%, 58%), hsl(217, 91%, 60%));\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.section-padding {\n  padding: 6rem 0;\n}\n\n@media (max-width: 768px) {\n  .section-padding {\n    padding: 4rem 0;\n  }\n}\n\n/* Enhanced Section Separators */\n.cyber-grid {\n  background-image: \n    linear-gradient(rgba(6, 182, 212, 0.1) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(6, 182, 212, 0.1) 1px, transparent 1px),\n    linear-gradient(rgba(147, 51, 234, 0.05) 1px, transparent 1px),\n    linear-gradient(90deg, rgba(147, 51, 234, 0.05) 1px, transparent 1px);\n  background-size: 100px 100px, 100px 100px, 20px 20px, 20px 20px;\n  animation: cyber-grid 15s linear infinite;\n}\n\n@keyframes cyber-grid {\n  0% { background-position: 0 0, 0 0, 0 0, 0 0; }\n  100% { background-position: 100px 100px, -100px 100px, 20px 20px, -20px 20px; }\n}\n\n.section-border {\n  position: relative;\n}\n\n.section-border::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100px;\n  height: 2px;\n  background: linear-gradient(90deg, transparent, hsl(292, 76%, 58%), transparent);\n  animation: pulse-border 3s ease-in-out infinite;\n}\n\n@keyframes pulse-border {\n  0%, 100% { opacity: 0.5; width: 100px; }\n  50% { opacity: 1; width: 200px; }\n}\n\n.neon-border {\n  position: relative;\n  border: 1px solid transparent;\n  background: linear-gradient(hsl(var(--background)), hsl(var(--background))) padding-box,\n              linear-gradient(45deg, hsl(187, 85%, 53%), hsl(292, 76%, 58%), hsl(217, 91%, 60%)) border-box;\n  box-shadow: \n    0 0 20px rgba(6, 182, 212, 0.3),\n    inset 0 0 20px rgba(147, 51, 234, 0.1);\n}\n\n.neon-glow {\n  box-shadow: \n    0 0 5px hsl(292, 76%, 58%),\n    0 0 10px hsl(292, 76%, 58%),\n    0 0 15px hsl(292, 76%, 58%),\n    0 0 20px hsl(292, 76%, 58%);\n}\n\n.cyber-separator {\n  height: 1px;\n  background: linear-gradient(90deg, \n    transparent 0%, \n    hsl(187, 85%, 53%) 25%, \n    hsl(292, 76%, 58%) 50%, \n    hsl(217, 91%, 60%) 75%, \n    transparent 100%);\n  animation: separator-glow 4s ease-in-out infinite alternate;\n}\n\n@keyframes separator-glow {\n  0% { opacity: 0.3; transform: scaleY(1); }\n  100% { opacity: 1; transform: scaleY(2); }\n}\n\n/* Enhanced 3D Effect Enhancements */\n.card-3d {\n  transform-style: preserve-3d;\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n}\n\n.card-3d:hover {\n  transform: perspective(1000px) rotateX(5deg) rotateY(5deg) translateZ(15px) scale(1.02);\n  box-shadow: \n    0 25px 50px rgba(147, 51, 234, 0.3),\n    0 0 50px rgba(6, 182, 212, 0.2),\n    inset 0 0 20px rgba(147, 51, 234, 0.1);\n}\n\n.floating-element {\n  animation: float-3d 8s ease-in-out infinite;\n}\n\n@keyframes float-3d {\n  0%, 100% { \n    transform: perspective(1000px) rotateX(0deg) rotateY(0deg) translateZ(0px) translateY(0px);\n  }\n  25% { \n    transform: perspective(1000px) rotateX(3deg) rotateY(3deg) translateZ(8px) translateY(-10px);\n  }\n  50% { \n    transform: perspective(1000px) rotateX(0deg) rotateY(6deg) translateZ(15px) translateY(-20px);\n  }\n  75% { \n    transform: perspective(1000px) rotateX(-3deg) rotateY(3deg) translateZ(8px) translateY(-10px);\n  }\n}\n\n/* Advanced Animation Effects */\n.morphing-border {\n  position: relative;\n  overflow: hidden;\n}\n\n.morphing-border::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(6, 182, 212, 0.4), transparent);\n  animation: shine 3s ease-in-out infinite;\n  z-index: 1;\n}\n\n@keyframes shine {\n  0% { left: -100%; }\n  100% { left: 100%; }\n}\n\n.tilt-effect {\n  transition: transform 0.3s ease-out;\n}\n\n.tilt-effect:hover {\n  transform: perspective(1000px) rotateX(10deg) rotateY(10deg) scale3d(1.05, 1.05, 1.05);\n}\n\n.hologram-effect {\n  position: relative;\n  background: linear-gradient(45deg, \n    rgba(6, 182, 212, 0.1) 0%, \n    rgba(147, 51, 234, 0.1) 25%, \n    rgba(236, 72, 153, 0.1) 50%, \n    rgba(59, 130, 246, 0.1) 75%, \n    rgba(6, 182, 212, 0.1) 100%);\n  background-size: 400% 400%;\n  animation: hologram-shift 6s ease infinite;\n}\n\n@keyframes hologram-shift {\n  0%, 100% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n}\n\n.particle-trail {\n  position: relative;\n  overflow: visible;\n}\n\n.particle-trail::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 4px;\n  height: 4px;\n  background: hsl(292, 76%, 58%);\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  animation: particle-float 4s ease-in-out infinite;\n  opacity: 0;\n}\n\n@keyframes particle-float {\n  0%, 100% { \n    opacity: 0; \n    transform: translate(-50%, -50%) scale(0);\n  }\n  25% { \n    opacity: 1; \n    transform: translate(-30px, -30px) scale(1);\n  }\n  50% { \n    opacity: 0.5; \n    transform: translate(30px, -60px) scale(0.5);\n  }\n  75% { \n    opacity: 0.8; \n    transform: translate(60px, 30px) scale(0.8);\n  }\n}\n\n.cyber-pulse {\n  animation: cyber-pulse-effect 3s ease-in-out infinite;\n}\n\n@keyframes cyber-pulse-effect {\n  0%, 100% {\n    box-shadow: \n      0 0 20px rgba(6, 182, 212, 0.4),\n      0 0 40px rgba(147, 51, 234, 0.2),\n      inset 0 0 20px rgba(6, 182, 212, 0.1);\n  }\n  50% {\n    box-shadow: \n      0 0 40px rgba(6, 182, 212, 0.8),\n      0 0 80px rgba(147, 51, 234, 0.6),\n      inset 0 0 40px rgba(6, 182, 212, 0.3);\n    transform: scale(1.02);\n  }\n}\n\n/* Utility Classes */\n.animate-pulse-glow {\n  animation: pulse-glow 2s ease-in-out infinite alternate;\n}\n\n.animate-float {\n  animation: float 6s ease-in-out infinite;\n}\n\n.animate-glitch {\n  animation: glitch 2s ease-in-out infinite alternate;\n}\n\n.animate-matrix {\n  animation: matrix 20s linear infinite;\n}\n\n.animate-circuit {\n  animation: circuit 8s linear infinite;\n}\n\n/* Glassmorphism Effects */\n.glass {\n  background: rgba(255, 255, 255, 0.05);\n  backdrop-filter: blur(10px) saturate(180%);\n  -webkit-backdrop-filter: blur(10px) saturate(180%);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n}\n\n.glass-card {\n  background: rgba(15, 15, 35, 0.6);\n  backdrop-filter: blur(20px) saturate(150%);\n  -webkit-backdrop-filter: blur(20px) saturate(150%);\n  border: 1px solid rgba(6, 182, 212, 0.2);\n  box-shadow: \n    0 8px 32px 0 rgba(147, 51, 234, 0.2),\n    inset 0 0 20px rgba(6, 182, 212, 0.1);\n}\n\n.glass-dark {\n  background: rgba(15, 15, 35, 0.8);\n  backdrop-filter: blur(25px) saturate(200%);\n  -webkit-backdrop-filter: blur(25px) saturate(200%);\n  border: 1px solid rgba(147, 51, 234, 0.3);\n}\n\n/* Custom Cursor Enhancement */\n@media (min-width: 768px) {\n  body {\n    cursor: none;\n  }\n  \n  a, button, [role=\"button\"], input, textarea, select {\n    cursor: none !important;\n  }\n}\n\n/* Parallax Effect */\n.parallax {\n  transform-style: preserve-3d;\n}\n\n.parallax-layer {\n  position: absolute;\n  inset: 0;\n}\n\n.parallax-layer-back {\n  transform: translateZ(-100px) scale(2);\n}\n\n.parallax-layer-mid {\n  transform: translateZ(-50px) scale(1.5);\n}\n\n.parallax-layer-front {\n  transform: translateZ(0px) scale(1);\n}\n\n/* Advanced Sound Wave Animation */\n@keyframes soundwave {\n  0%, 100% { height: 10px; }\n  50% { height: 30px; }\n}\n\n.soundwave-bar {\n  animation: soundwave 1s ease-in-out infinite;\n}\n\n.soundwave-bar:nth-child(1) { animation-delay: 0s; }\n.soundwave-bar:nth-child(2) { animation-delay: 0.1s; }\n.soundwave-bar:nth-child(3) { animation-delay: 0.2s; }\n.soundwave-bar:nth-child(4) { animation-delay: 0.3s; }\n.soundwave-bar:nth-child(5) { animation-delay: 0.4s; }\n\n/* Scan Line Effect */\n@keyframes scanline {\n  0% { transform: translateY(-100%); }\n  100% { transform: translateY(100vh); }\n}\n\n.scanline {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(to right, \n    transparent, \n    rgba(6, 182, 212, 0.5), \n    transparent);\n  animation: scanline 8s linear infinite;\n  pointer-events: none;\n  z-index: 50;\n}\n\n/* Typing Indicator Animation */\n@keyframes typing {\n  0%, 100% { opacity: 0; }\n  50% { opacity: 1; }\n}\n\n.typing-indicator span {\n  animation: typing 1.4s infinite;\n}\n\n.typing-indicator span:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.typing-indicator span:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n/* Enhanced Gradient Text */\n.gradient-text-animated {\n  background: linear-gradient(\n    90deg,\n    hsl(187, 85%, 53%) 0%,\n    hsl(292, 76%, 58%) 25%,\n    hsl(217, 91%, 60%) 50%,\n    hsl(292, 76%, 58%) 75%,\n    hsl(187, 85%, 53%) 100%\n  );\n  background-size: 200% auto;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  animation: gradient-flow 3s linear infinite;\n}\n\n@keyframes gradient-flow {\n  to { background-position: 200% center; }\n}\n\n/* Interactive Hover Glow */\n.interactive-glow {\n  position: relative;\n  transition: all 0.3s ease;\n}\n\n.interactive-glow::before {\n  content: '';\n  position: absolute;\n  inset: -2px;\n  border-radius: inherit;\n  background: linear-gradient(45deg, \n    hsl(187, 85%, 53%), \n    hsl(292, 76%, 58%), \n    hsl(217, 91%, 60%));\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  z-index: -1;\n  filter: blur(10px);\n}\n\n.interactive-glow:hover::before {\n  opacity: 1;\n}\n\n/* Loading Spinner */\n@keyframes spin-pulse {\n  0%, 100% {\n    transform: rotate(0deg) scale(1);\n    opacity: 1;\n  }\n  50% {\n    transform: rotate(180deg) scale(1.1);\n    opacity: 0.8;\n  }\n}\n\n.spinner {\n  animation: spin-pulse 1.5s ease-in-out infinite;\n}\n","size_bytes":17021},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/tilt-card.tsx":{"content":"import { useRef, useState } from \"react\";\nimport { motion, useMotionValue, useSpring, useTransform } from \"framer-motion\";\n\ninterface TiltCardProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport default function TiltCard({ children, className = \"\" }: TiltCardProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const [isHovering, setIsHovering] = useState(false);\n\n  const x = useMotionValue(0);\n  const y = useMotionValue(0);\n\n  const mouseXSpring = useSpring(x);\n  const mouseYSpring = useSpring(y);\n\n  const rotateX = useTransform(mouseYSpring, [-0.5, 0.5], [\"17.5deg\", \"-17.5deg\"]);\n  const rotateY = useTransform(mouseXSpring, [-0.5, 0.5], [\"-17.5deg\", \"17.5deg\"]);\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n\n    const rect = ref.current.getBoundingClientRect();\n    const width = rect.width;\n    const height = rect.height;\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n\n    const xPct = mouseX / width - 0.5;\n    const yPct = mouseY / height - 0.5;\n\n    x.set(xPct);\n    y.set(yPct);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovering(false);\n    x.set(0);\n    y.set(0);\n  };\n\n  return (\n    <motion.div\n      ref={ref}\n      onMouseMove={handleMouseMove}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={handleMouseLeave}\n      style={{\n        rotateX,\n        rotateY,\n        transformStyle: \"preserve-3d\",\n      }}\n      className={`relative transition-all ${className}`}\n    >\n      <div style={{ transform: \"translateZ(75px)\", transformStyle: \"preserve-3d\" }}>\n        {children}\n      </div>\n    </motion.div>\n  );\n}\n","size_bytes":1672},"client/src/components/animated-counter.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\nimport { useInView } from \"framer-motion\";\n\ninterface AnimatedCounterProps {\n  end: number;\n  duration?: number;\n  prefix?: string;\n  suffix?: string;\n  className?: string;\n}\n\nexport default function AnimatedCounter({ \n  end, \n  duration = 2000, \n  prefix = \"\", \n  suffix = \"\",\n  className = \"\"\n}: AnimatedCounterProps) {\n  const [count, setCount] = useState(0);\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: true });\n\n  useEffect(() => {\n    if (!isInView) return;\n\n    let startTime: number;\n    let animationFrame: number;\n\n    const animate = (timestamp: number) => {\n      if (!startTime) startTime = timestamp;\n      const progress = Math.min((timestamp - startTime) / duration, 1);\n      \n      setCount(Math.floor(progress * end));\n\n      if (progress < 1) {\n        animationFrame = requestAnimationFrame(animate);\n      }\n    };\n\n    animationFrame = requestAnimationFrame(animate);\n\n    return () => cancelAnimationFrame(animationFrame);\n  }, [end, duration, isInView]);\n\n  return (\n    <span ref={ref} className={className}>\n      {prefix}{count.toLocaleString()}{suffix}\n    </span>\n  );\n}\n","size_bytes":1180},"client/src/components/sponsors-carousel.tsx":{"content":"import { motion } from \"framer-motion\";\nimport CyberCard from \"@/components/cyber-card\";\nimport { Building2 } from \"lucide-react\";\nimport offensoLogo from \"@assets/Offenso-Logo-White.png_1759068476216.webp\";\n\nconst sponsors = [\n  {\n    name: \"Offenso Hackers Academy\",\n    logo: offensoLogo,\n    tier: \"Platinum Sponsor\"\n  },\n  {\n    name: \"Royal College of Engineering\",\n    logo: null,\n    tier: \"Venue Partner\"\n  },\n  {\n    name: \"Student Committee Cybersecurity\",\n    logo: null,\n    tier: \"Organizing Partner\"\n  }\n];\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 60 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nconst staggerContainer = {\n  animate: {\n    transition: {\n      staggerChildren: 0.15\n    }\n  }\n};\n\nexport default function SponsorsCarousel() {\n  return (\n    <section className=\"section-padding relative z-10\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial=\"initial\"\n          whileInView=\"animate\"\n          viewport={{ once: true }}\n          variants={fadeInUp}\n        >\n          <h2 className=\"text-3xl sm:text-4xl font-orbitron font-bold mb-12 text-center text-primary\">\n            <Building2 className=\"inline mr-3\" />\n            Our Partners\n          </h2>\n        </motion.div>\n\n        <motion.div \n          className=\"grid grid-cols-1 md:grid-cols-3 gap-8\"\n          variants={staggerContainer}\n          initial=\"initial\"\n          whileInView=\"animate\"\n          viewport={{ once: true }}\n        >\n          {sponsors.map((sponsor, index) => (\n            <motion.div key={index} variants={fadeInUp}>\n              <CyberCard>\n                <div className=\"flex flex-col items-center justify-center p-6 space-y-4\">\n                  {sponsor.logo ? (\n                    <img \n                      src={sponsor.logo} \n                      alt={sponsor.name}\n                      className=\"h-24 w-auto object-contain\"\n                    />\n                  ) : (\n                    <div className=\"h-24 w-24 rounded-full bg-primary/20 flex items-center justify-center\">\n                      <Building2 className=\"h-12 w-12 text-primary\" />\n                    </div>\n                  )}\n                  <div className=\"text-center\">\n                    <p className=\"text-xs text-secondary font-semibold mb-1\">{sponsor.tier}</p>\n                    <h3 className=\"text-lg font-bold text-foreground\">{sponsor.name}</h3>\n                  </div>\n                </div>\n              </CyberCard>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2623},"client/src/components/testimonials-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport CyberCard from \"@/components/cyber-card\";\nimport { Quote, Star } from \"lucide-react\";\n\nconst testimonials = [\n  {\n    name: \"Arjun K\",\n    role: \"Previous Participant\",\n    content: \"CTF Cognito was an amazing experience! The challenges were well-crafted and really tested my skills. Learned so much about web exploitation and cryptography.\",\n    rating: 5\n  },\n  {\n    name: \"Priya M\",\n    role: \"Cybersecurity Student\",\n    content: \"As a beginner, I was nervous, but the organizers were super helpful. The OSINT challenges were my favorite. Definitely recommend this event!\",\n    rating: 5\n  },\n  {\n    name: \"Rahul S\",\n    role: \"Bug Bounty Hunter\",\n    content: \"Great competition with diverse challenges. The forensics section was particularly challenging. Well organized and great prizes too!\",\n    rating: 5\n  }\n];\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 60 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nconst staggerContainer = {\n  animate: {\n    transition: {\n      staggerChildren: 0.2\n    }\n  }\n};\n\nexport default function TestimonialsSection() {\n  return (\n    <section className=\"section-padding relative z-10\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial=\"initial\"\n          whileInView=\"animate\"\n          viewport={{ once: true }}\n          variants={fadeInUp}\n        >\n          <h2 className=\"text-3xl sm:text-4xl font-orbitron font-bold mb-12 text-center text-primary\">\n            What Participants Say\n          </h2>\n        </motion.div>\n\n        <motion.div \n          className=\"grid grid-cols-1 md:grid-cols-3 gap-8\"\n          variants={staggerContainer}\n          initial=\"initial\"\n          whileInView=\"animate\"\n          viewport={{ once: true }}\n        >\n          {testimonials.map((testimonial, index) => (\n            <motion.div key={index} variants={fadeInUp}>\n              <CyberCard>\n                <Quote className=\"text-primary mb-4 h-8 w-8\" />\n                <p className=\"text-muted-foreground mb-6 italic\">\n                  \"{testimonial.content}\"\n                </p>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"font-semibold text-foreground\">{testimonial.name}</p>\n                    <p className=\"text-sm text-muted-foreground\">{testimonial.role}</p>\n                  </div>\n                  <div className=\"flex\">\n                    {Array.from({ length: testimonial.rating }).map((_, i) => (\n                      <Star key={i} className=\"h-4 w-4 fill-yellow-500 text-yellow-500\" />\n                    ))}\n                  </div>\n                </div>\n              </CyberCard>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2858},"client/src/components/custom-cursor.tsx":{"content":"import { useEffect } from \"react\";\n\nexport default function CustomCursor() {\n  useEffect(() => {\n    // Apply custom cursor globally with maximum specificity\n    const style = document.createElement('style');\n    style.textContent = `\n      html, body, * {\n        cursor: url(/cursors/custom-cursor.cur), auto !important;\n      }\n      \n      *, *::before, *::after,\n      *:hover, *:active, *:focus,\n      button, button:hover, button:active,\n      a, a:hover, a:active,\n      input, select, textarea,\n      div, span, section, article,\n      iframe, canvas, svg {\n        cursor: url(/cursors/custom-cursor.cur), auto !important;\n      }\n      \n      /* Force on leaflet/map elements */\n      .leaflet-container,\n      .leaflet-grab,\n      .leaflet-interactive {\n        cursor: url(/cursors/custom-cursor.cur), auto !important;\n      }\n    `;\n    document.head.appendChild(style);\n    \n    // Also set directly on body\n    document.body.style.cursor = 'url(/cursors/custom-cursor.cur), auto';\n\n    return () => {\n      document.head.removeChild(style);\n      document.body.style.cursor = 'auto';\n    };\n  }, []);\n\n  return null;\n}\n","size_bytes":1135},"client/src/components/newsletter-signup.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport CyberCard from \"@/components/cyber-card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Mail, Send } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 60 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nexport default function NewsletterSignup() {\n  const [email, setEmail] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!email || !email.includes(\"@\")) {\n      toast({\n        title: \"Invalid Email\",\n        description: \"Please enter a valid email address\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    toast({\n      title: \"Success!\",\n      description: \"You've been subscribed to our newsletter\",\n    });\n    \n    setEmail(\"\");\n    setIsLoading(false);\n  };\n\n  return (\n    <section className=\"section-padding relative z-10\">\n      <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial=\"initial\"\n          whileInView=\"animate\"\n          viewport={{ once: true }}\n          variants={fadeInUp}\n        >\n          <CyberCard>\n            <div className=\"text-center mb-6\">\n              <Mail className=\"h-12 w-12 text-primary mx-auto mb-4\" />\n              <h2 className=\"text-2xl sm:text-3xl font-orbitron font-bold mb-3 text-foreground\">\n                Stay Updated\n              </h2>\n              <p className=\"text-muted-foreground\">\n                Get the latest updates about CTF Cognito and future cybersecurity events\n              </p>\n            </div>\n            \n            <form onSubmit={handleSubmit} className=\"flex flex-col sm:flex-row gap-3\">\n              <Input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"flex-1\"\n                disabled={isLoading}\n              />\n              <Button \n                type=\"submit\" \n                className=\"bg-primary hover:bg-primary/90\"\n                disabled={isLoading}\n              >\n                {isLoading ? \"Subscribing...\" : (\n                  <>\n                    <Send className=\"mr-2 h-4 w-4\" />\n                    Subscribe\n                  </>\n                )}\n              </Button>\n            </form>\n          </CyberCard>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2791},"client/src/components/venue-map.tsx":{"content":"import { motion } from \"framer-motion\";\nimport CyberCard from \"@/components/cyber-card\";\nimport { MapPin, Navigation } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 60 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nexport default function VenueMap() {\n  const venueLocation = \"Royal College of Engineering & Technology, Chiramanangad P.O, Akkikavu Rd, Thrissur, Kerala 680604\";\n  const mapsUrl = \"https://maps.app.goo.gl/eQKFzAVjAGasjrn87\";\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      whileInView=\"animate\"\n      viewport={{ once: true }}\n      variants={fadeInUp}\n    >\n      <CyberCard>\n        <h3 className=\"text-2xl font-orbitron font-bold mb-6 text-primary\">\n          <MapPin className=\"inline mr-3\" />\n          Find Us Here\n        </h3>\n        <div className=\"space-y-4\">\n          <div className=\"relative w-full h-64 md:h-80 rounded-lg overflow-hidden border border-border\">\n            <iframe\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3914.3486771234567!2d76.1032991!3d10.6906572!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3ba7c06ae727fb23%3A0xef071dcef7bf35f5!2sRoyal%20College%20of%20Engineering%20%26%20Technology!5e0!3m2!1sen!2sin!4v1234567890123!5m2!1sen!2sin\"\n              width=\"100%\"\n              height=\"100%\"\n              style={{ border: 0 }}\n              allowFullScreen\n              loading=\"lazy\"\n              referrerPolicy=\"no-referrer-when-downgrade\"\n              title=\"Venue Location Map\"\n            />\n          </div>\n          <p className=\"text-muted-foreground text-sm\">{venueLocation}</p>\n          <Button\n            className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\"\n            onClick={() => window.open(mapsUrl, '_blank')}\n          >\n            <Navigation className=\"mr-2 h-4 w-4\" />\n            Get Directions\n          </Button>\n        </div>\n      </CyberCard>\n    </motion.div>\n  );\n}\n","size_bytes":2021},"client/src/components/theme-toggle.tsx":{"content":"import { Moon, Sun } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useTheme } from \"next-themes\";\nimport { useEffect, useState } from \"react\";\n\nexport default function ThemeToggle() {\n  const { theme, setTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n      className=\"relative w-9 h-9 rounded-lg\"\n      data-testid=\"theme-toggle\"\n    >\n      <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n      <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  );\n}\n","size_bytes":922},"client/src/components/participant-counter.tsx":{"content":"import { motion } from \"framer-motion\";\nimport AnimatedCounter from \"@/components/animated-counter\";\nimport { Users, Trophy, Award } from \"lucide-react\";\n\nconst stats = [\n  {\n    icon: Users,\n    value: 150,\n    label: \"Expected Participants\",\n    suffix: \"+\"\n  },\n  {\n    icon: Trophy,\n    value: 8000,\n    label: \"Total Prize Pool\",\n    prefix: \"₹\"\n  },\n  {\n    icon: Award,\n    value: 50,\n    label: \"Challenges\",\n    suffix: \"+\"\n  }\n];\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 60 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nconst staggerContainer = {\n  animate: {\n    transition: {\n      staggerChildren: 0.15\n    }\n  }\n};\n\nexport default function ParticipantCounter() {\n  return (\n    <section className=\"section-padding relative z-10\">\n      <motion.div \n        className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\"\n        variants={staggerContainer}\n        initial=\"initial\"\n        whileInView=\"animate\"\n        viewport={{ once: true }}\n      >\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          {stats.map((stat, index) => (\n            <motion.div\n              key={index}\n              variants={fadeInUp}\n              className=\"bg-card/50 backdrop-blur-sm border border-border rounded-lg p-8 text-center hover:border-primary transition-all duration-300\"\n            >\n              <stat.icon className=\"h-12 w-12 text-primary mx-auto mb-4\" />\n              <div className=\"text-4xl font-bold text-foreground mb-2\">\n                <AnimatedCounter \n                  end={stat.value} \n                  prefix={stat.prefix} \n                  suffix={stat.suffix}\n                />\n              </div>\n              <p className=\"text-muted-foreground font-medium\">{stat.label}</p>\n            </motion.div>\n          ))}\n        </div>\n      </motion.div>\n    </section>\n  );\n}\n","size_bytes":1858},"client/src/components/past-events-gallery.tsx":{"content":"import { motion } from \"framer-motion\";\nimport CyberCard from \"@/components/cyber-card\";\nimport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n} from \"@/components/ui/carousel\";\nimport { Image as ImageIcon } from \"lucide-react\";\n\n// Using placeholder images - replace with actual event photos\nconst galleryImages = [\n  {\n    id: 1,\n    alt: \"CTF Competition in action\",\n    caption: \"Participants solving challenges\"\n  },\n  {\n    id: 2,\n    alt: \"Prize Distribution\",\n    caption: \"Winners receiving their prizes\"\n  },\n  {\n    id: 3,\n    alt: \"Team Collaboration\",\n    caption: \"Teams working together\"\n  },\n  {\n    id: 4,\n    alt: \"Event Venue\",\n    caption: \"Competition venue setup\"\n  }\n];\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 60 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nexport default function PastEventsGallery() {\n  return (\n    <section className=\"section-padding relative z-10\">\n      <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial=\"initial\"\n          whileInView=\"animate\"\n          viewport={{ once: true }}\n          variants={fadeInUp}\n        >\n          <h2 className=\"text-3xl sm:text-4xl font-orbitron font-bold mb-12 text-center text-primary\">\n            Event Highlights\n          </h2>\n          \n          <CyberCard>\n            <Carousel className=\"w-full\">\n              <CarouselContent>\n                {galleryImages.map((image) => (\n                  <CarouselItem key={image.id}>\n                    <div className=\"relative aspect-video bg-muted/50 rounded-lg flex items-center justify-center\">\n                      {/* Placeholder - replace with actual images */}\n                      <div className=\"flex flex-col items-center\">\n                        <ImageIcon className=\"h-24 w-24 text-primary/50 mb-4\" />\n                        <p className=\"text-muted-foreground\">{image.caption}</p>\n                      </div>\n                    </div>\n                  </CarouselItem>\n                ))}\n              </CarouselContent>\n              <CarouselPrevious />\n              <CarouselNext />\n            </Carousel>\n            <p className=\"text-center text-sm text-muted-foreground mt-6\">\n              Photos from previous CTF events and competitions\n            </p>\n          </CyberCard>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2421},"client/src/components/matrix-rain.tsx":{"content":"import { useEffect, useRef } from \"react\";\n\nexport default function MatrixRain() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const chars = \"01アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲン\";\n    const fontSize = 14;\n    const columns = canvas.width / fontSize;\n    const drops: number[] = Array(Math.floor(columns)).fill(1);\n\n    const draw = () => {\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.05)\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.fillStyle = \"#0F0\";\n      ctx.font = `${fontSize}px monospace`;\n\n      for (let i = 0; i < drops.length; i++) {\n        const text = chars[Math.floor(Math.random() * chars.length)];\n        ctx.fillText(text, i * fontSize, drops[i] * fontSize);\n\n        if (drops[i] * fontSize > canvas.height && Math.random() > 0.975) {\n          drops[i] = 0;\n        }\n        drops[i]++;\n      }\n    };\n\n    const interval = setInterval(draw, 33);\n\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"fixed inset-0 pointer-events-none opacity-10 z-0\"\n      aria-hidden=\"true\"\n    />\n  );\n}\n","size_bytes":1688},"client/src/components/event-timeline.tsx":{"content":"import { motion } from \"framer-motion\";\nimport CyberCard from \"@/components/cyber-card\";\nimport { Clock, CheckCircle, Circle } from \"lucide-react\";\n\nconst timelineEvents = [\n  {\n    time: \"9:00 AM - 9:30 AM\",\n    title: \"Registration & Check-in\",\n    description: \"Participant registration and welcome\"\n  },\n  {\n    time: \"9:30 AM - 10:00 AM\",\n    title: \"Opening Ceremony\",\n    description: \"Event introduction and rules briefing\"\n  },\n  {\n    time: \"10:00 AM - 3:00 PM\",\n    title: \"CTF Competition\",\n    description: \"Main competition phase - solve challenges and capture flags\"\n  },\n  {\n    time: \"3:00 PM - 3:30 PM\",\n    title: \"Lunch Break\",\n    description: \"Refreshments and networking\"\n  },\n  {\n    time: \"3:30 PM - 4:00 PM\",\n    title: \"Results & Prize Distribution\",\n    description: \"Winner announcement and awards ceremony\"\n  },\n  {\n    time: \"4:00 PM\",\n    title: \"Closing\",\n    description: \"Thank you and group photo\"\n  }\n];\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 60 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nexport default function EventTimeline() {\n  return (\n    <motion.div\n      initial=\"initial\"\n      whileInView=\"animate\"\n      viewport={{ once: true }}\n      variants={fadeInUp}\n    >\n      <CyberCard>\n        <h3 className=\"text-2xl font-orbitron font-bold mb-8 text-primary\">\n          <Clock className=\"inline mr-3\" />\n          Event Schedule\n        </h3>\n        <div className=\"relative\">\n          {/* Timeline line */}\n          <div className=\"absolute left-4 top-0 bottom-0 w-0.5 bg-border\" />\n          \n          <div className=\"space-y-8\">\n            {timelineEvents.map((event, index) => (\n              <div key={index} className=\"relative pl-12\">\n                {/* Timeline dot */}\n                <div className=\"absolute left-2 top-1 w-4 h-4 rounded-full bg-primary border-4 border-background\" />\n                \n                <div className=\"space-y-1\">\n                  <p className=\"text-sm font-semibold text-secondary\">{event.time}</p>\n                  <h4 className=\"text-lg font-bold text-foreground\">{event.title}</h4>\n                  <p className=\"text-sm text-muted-foreground\">{event.description}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </CyberCard>\n    </motion.div>\n  );\n}\n","size_bytes":2342},"client/src/components/challenge-preview.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport CyberCard from \"@/components/cyber-card\";\nimport { Code, Lock, Search, FileText, Binary, CheckCircle } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nconst challenges = [\n  {\n    icon: Code,\n    title: \"Web Exploitation\",\n    description: \"Find and exploit vulnerabilities in web applications\",\n    difficulty: \"Medium\"\n  },\n  {\n    icon: Search,\n    title: \"OSINT\",\n    description: \"Gather intelligence from publicly available sources\",\n    difficulty: \"Easy\"\n  },\n  {\n    icon: Lock,\n    title: \"Cryptography\",\n    description: \"Decrypt messages and break encryption\",\n    difficulty: \"Hard\"\n  },\n  {\n    icon: FileText,\n    title: \"Forensics\",\n    description: \"Analyze files and recover hidden data\",\n    difficulty: \"Medium\"\n  },\n  {\n    icon: Binary,\n    title: \"Reverse Engineering\",\n    description: \"Understand and reverse compiled code\",\n    difficulty: \"Hard\"\n  }\n];\n\nconst sampleChallenge = {\n  title: \"Simple XOR Cipher\",\n  description: \"Decrypt this message: 'Uryyb Jbeyq' (Hint: ROT13)\",\n  flag: \"HELLO WORLD\"\n};\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 60 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nconst staggerContainer = {\n  animate: {\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nexport default function ChallengePreview() {\n  const [answer, setAnswer] = useState(\"\");\n  const [solved, setSolved] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (answer.toUpperCase() === sampleChallenge.flag) {\n      setSolved(true);\n      toast({\n        title: \"🎉 Correct!\",\n        description: \"You've solved the sample challenge!\",\n      });\n    } else {\n      toast({\n        title: \"Incorrect\",\n        description: \"Try again! Remember the hint.\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  return (\n    <section className=\"section-padding relative z-10\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial=\"initial\"\n          whileInView=\"animate\"\n          viewport={{ once: true }}\n          variants={fadeInUp}\n        >\n          <h2 className=\"text-3xl sm:text-4xl font-orbitron font-bold mb-4 text-center text-primary\">\n            Challenge Categories\n          </h2>\n          <p className=\"text-center text-muted-foreground mb-12 max-w-2xl mx-auto\">\n            Explore various categories of cybersecurity challenges. Test your skills across different domains!\n          </p>\n        </motion.div>\n\n        <motion.div \n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12\"\n          variants={staggerContainer}\n          initial=\"initial\"\n          whileInView=\"animate\"\n          viewport={{ once: true }}\n        >\n          {challenges.map((challenge, index) => (\n            <motion.div key={index} variants={fadeInUp}>\n              <CyberCard>\n                <challenge.icon className=\"h-10 w-10 text-primary mb-4\" />\n                <h3 className=\"text-xl font-bold text-foreground mb-2\">{challenge.title}</h3>\n                <p className=\"text-sm text-muted-foreground mb-3\">{challenge.description}</p>\n                <span className={`text-xs px-3 py-1 rounded-full ${\n                  challenge.difficulty === 'Easy' ? 'bg-green-500/20 text-green-500' :\n                  challenge.difficulty === 'Medium' ? 'bg-yellow-500/20 text-yellow-500' :\n                  'bg-red-500/20 text-red-500'\n                }`}>\n                  {challenge.difficulty}\n                </span>\n              </CyberCard>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        <motion.div\n          initial=\"initial\"\n          whileInView=\"animate\"\n          viewport={{ once: true }}\n          variants={fadeInUp}\n        >\n          <CyberCard>\n            <h3 className=\"text-2xl font-orbitron font-bold mb-4 text-primary\">\n              🔥 Try a Sample Challenge\n            </h3>\n            <div className=\"bg-muted/50 p-4 rounded-lg mb-4\">\n              <h4 className=\"font-bold text-foreground mb-2\">{sampleChallenge.title}</h4>\n              <p className=\"text-sm text-muted-foreground mb-3\">{sampleChallenge.description}</p>\n              <code className=\"block bg-background p-3 rounded border border-border text-primary font-mono\">\n                Uryyb Jbeyq\n              </code>\n            </div>\n            \n            {!solved ? (\n              <form onSubmit={handleSubmit} className=\"flex gap-3\">\n                <Input\n                  placeholder=\"Enter your answer...\"\n                  value={answer}\n                  onChange={(e) => setAnswer(e.target.value)}\n                  className=\"flex-1\"\n                />\n                <Button type=\"submit\" className=\"bg-primary hover:bg-primary/90\">\n                  Submit Flag\n                </Button>\n              </form>\n            ) : (\n              <div className=\"flex items-center gap-3 text-green-500\">\n                <CheckCircle className=\"h-6 w-6\" />\n                <span className=\"font-semibold\">Challenge Solved!</span>\n              </div>\n            )}\n          </CyberCard>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5404},"client/src/components/faq-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport CyberCard from \"@/components/cyber-card\";\nimport { HelpCircle } from \"lucide-react\";\n\nconst faqs = [\n  {\n    question: \"What is a CTF competition?\",\n    answer: \"Capture The Flag (CTF) is a cybersecurity competition where participants solve security-related challenges to find hidden 'flags'. It's a practical way to learn and test your hacking skills in a legal and educational environment.\"\n  },\n  {\n    question: \"Do I need prior hacking experience?\",\n    answer: \"No! While experience helps, beginners are welcome. We have challenges ranging from easy to hard difficulty levels. It's a great opportunity to learn cybersecurity hands-on.\"\n  },\n  {\n    question: \"Can I participate alone or do I need a team?\",\n    answer: \"You can participate individually or form a team of up to 2 members. Team collaboration can be beneficial for solving diverse challenges.\"\n  },\n  {\n    question: \"What should I bring to the event?\",\n    answer: \"Bring your laptop with a working battery, charger, and any tools you prefer. Ensure you have a stable internet connection capability. Also bring a valid ID proof for registration.\"\n  },\n  {\n    question: \"Is there an entry fee?\",\n    answer: \"Pre-registration costs ₹100 per person, while spot registration is ₹150 per person. Payment details will be provided after form submission.\"\n  },\n  {\n    question: \"What are the prizes?\",\n    answer: \"1st place wins ₹5,000, 2nd place wins ₹3,000, and all participants receive certificates of participation from the organizers.\"\n  },\n  {\n    question: \"What types of challenges will there be?\",\n    answer: \"Challenges include Web Exploitation, OSINT (Open Source Intelligence), Cryptography, Digital Forensics, and Reverse Engineering. Each category tests different cybersecurity skills.\"\n  },\n  {\n    question: \"Can I use my own tools and scripts?\",\n    answer: \"Yes, you can use any tools, scripts, or resources you want. However, attacking the CTF infrastructure or other participants is strictly prohibited.\"\n  },\n];\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 60 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nexport default function FAQSection() {\n  return (\n    <section id=\"faq\" className=\"section-padding relative z-10\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial=\"initial\"\n          whileInView=\"animate\"\n          viewport={{ once: true }}\n          variants={fadeInUp}\n        >\n          <CyberCard>\n            <h2 className=\"text-3xl sm:text-4xl font-orbitron font-bold mb-8 text-center text-primary\">\n              <HelpCircle className=\"inline mr-3\" />\n              Frequently Asked Questions\n            </h2>\n            <Accordion type=\"single\" collapsible className=\"w-full\">\n              {faqs.map((faq, index) => (\n                <AccordionItem key={index} value={`item-${index}`}>\n                  <AccordionTrigger className=\"text-left font-semibold text-foreground hover:text-primary\">\n                    {faq.question}\n                  </AccordionTrigger>\n                  <AccordionContent className=\"text-muted-foreground\">\n                    {faq.answer}\n                  </AccordionContent>\n                </AccordionItem>\n              ))}\n            </Accordion>\n          </CyberCard>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3524}},"version":2}